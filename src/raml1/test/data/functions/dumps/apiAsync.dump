{
	"title": "Instagram",
	"version": "v1",
	"baseUri": "https://api.instagram.com/{version}/",
	"baseUriParameters": {
		"version": {
			"name": "version",
			"displayName": "version",
			"type": "string",
			"required": true,
			"repeat": false,
			"enum": [
				"v1"
			],
			"__METADATA__": {
				"calculated": true,
				"primitiveValuesMeta": {
					"displayName": {
						"calculated": true
					},
					"type": {
						"insertedAsDefault": true
					},
					"required": {
						"insertedAsDefault": true
					},
					"repeat": {
						"insertedAsDefault": true
					},
					"enum": {
						"calculated": true
					}
				}
			}
		}
	},
	"protocols": [
		"HTTPS"
	],
	"mediaType": "application/json",
	"schemas": [
		{
			"location": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"latitude\": {\n          \"type\": \"number\"\n        },\n        \"longtitude\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}"
		},
		{
			"locations": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"meta\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"code\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"data\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"latitude\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"longitude\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
		},
		{
			"media": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"users_in_photo\": {\n          \"type\": \"array\",\n          \"required\": false,\n          \"items\": [{\n            \"properties\": {\n              \"user\": {\n                \"properties\": {\n                  \"username\": {\n                    \"type\": \"string\"\n                  },\n                  \"full_name\": {\n                    \"type\": \"string\"\n                  },\n                  \"id\": {\n                    \"type\": \"string\"\n                  },\n                  \"profile_picture\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              },\n              \"position\": {\n                \"properties\": {\n                  \"x\": {\n                    \"type\": \"number\"\n                  },\n                  \"y\": {\n                    \"type\": \"number\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            },\n            \"type\": \"object\"\n          }]\n        },\n        \"filter\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"required\": false,\n          \"items\": [{\n            \"type\": \"string\"\n          }]\n        },\n        \"comments\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"data\": {\n              \"type\": \"array\",\n              \"required\": false,\n              \"items\": {\n                \"properties\": {\n                  \"created_time\": {\n                    \"type\": \"string\"\n                  },\n                  \"text\": {\n                    \"type\": \"string\"\n                  },\n                  \"from\": {\n                    \"properties\": {\n                      \"username\": {\n                        \"type\": \"string\"\n                      },\n                      \"full_name\": {\n                        \"type\": \"string\"\n                      },\n                      \"id\": {\n                        \"type\": \"string\"\n                      },\n                      \"profile_picture\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"id\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            },\n            \"count\": {\n              \"type\": \"integer\"\n            }\n          }\n        },\n        \"caption\": {\n          \"type\": \"string\"\n        },\n        \"likes\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"count\": {\n              \"type\": \"integer\"\n            },\n            \"data\": {\n              \"type\": \"array\",\n              \"required\": false,\n              \"items\": [{\n                \"properties\": {\n                  \"username\": {\n                    \"type\": \"string\"\n                  },\n                  \"full_name\": {\n                    \"type\": \"string\"\n                  },\n                  \"id\": {\n                    \"type\": \"string\"\n                  },\n                  \"profile_picture\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }]\n            }\n          }\n        },\n        \"link\": {\n          \"type\": \"string\"\n        },\n        \"user\": {\n          \"properties\": {\n            \"username\": {\n              \"type\": \"string\"\n            },\n            \"full_name\": {\n              \"type\": \"string\"\n            },\n            \"profile_picture\": {\n              \"type\": \"string\"\n            },\n            \"bio\": {\n              \"type\": \"string\"\n            },\n            \"website\": {\n              \"type\": \"string\"\n            },\n            \"id\": {\n              \"type\": \"string\"\n            }\n          },\n          \"type\": \"object\"\n        },\n        \"created_time\": {\n          \"type\": \"string\"\n        },\n        \"images\": {\n          \"properties\": {\n            \"low_resolution\": {\n              \"properties\": {\n                \"url\": {\n                  \"type\": \"string\"\n                },\n                \"width\": {\n                  \"type\": \"integer\"\n                },\n                \"height\": {\n                  \"type\": \"integer\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"thumbnail\": {\n              \"properties\": {\n                \"url\": {\n                  \"type\": \"string\"\n                },\n                \"width\": {\n                  \"type\": \"integer\"\n                },\n                \"height\": {\n                  \"type\": \"integer\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"standard_resolution\": {\n              \"properties\": {\n                \"url\": {\n                  \"type\": \"string\"\n                },\n                \"width\": {\n                  \"type\": \"integer\"\n                },\n                \"height\": {\n                  \"type\": \"integer\"\n                }\n              },\n              \"type\": \"object\"\n            }\n          },\n          \"type\": \"object\"\n        },\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"location\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}"
		},
		{
			"mediaComment": "{\n  \"type\": \"object\",\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"meta\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"code\": {\n          \"type\": \"integer\"\n        }\n      }\n    },\n    \"data\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"created_time\": {\n            \"type\": \"string\"\n          },\n          \"text\": {\n            \"type\": \"string\"\n          },\n          \"from\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"username\": {\n                \"type\": \"string\"\n              },\n              \"profile_picture\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"string\"\n              },\n              \"full_name\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"id\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
		},
		{
			"mediaLikes": "{\n  \"type\": \"object\",\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"data\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"first_name\": {\n            \"type\": \"string\"\n          },\n          \"last_name\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
		},
		{
			"mediaSearch": "{\n  \"type\": \"object\",\n  \"$schema\": \"http://json-schema.org/draft-04/schema\",\n  \"properties\": {\n    \"meta\": {\n      \"type\": \"object\"\n    },\n    \"data\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"oneOf\": [\n          {\n            \"properties\": {\n              \"distance\": {\n                \"type\": \"number\"\n              },\n              \"type\": {\n                \"type\": \"string\"\n              },\n              \"users_in_photo\": {\n                \"type\": \"string\"\n              },\n              \"filter\": {\n                \"type\": \"string\"\n              },\n              \"tags\": {\n                \"type\": \"array\"\n              },\n              \"comments\": {\n                \"properties\": {\n                  \"data\": {\n                    \"properties\": {\n                      \"created_time\": {\n                        \"type\": \"string\"\n                      },\n                      \"text\": {\n                        \"type\": \"string\"\n                      },\n                      \"from\": {\n                        \"properties\": {\n                          \"username\": {\n                            \"type\": \"string\"\n                          },\n                          \"full_name\": {\n                            \"type\": \"string\"\n                          },\n                          \"id\": {\n                            \"type\": \"string\"\n                          },\n                          \"profile_picture\": {\n                            \"type\": \"string\"\n                          }\n                        },\n                        \"type\": \"object\"\n                      },\n                      \"id\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"type\": {\n                    \"type\": \"string\"\n                  },\n                  \"count\": {\n                    \"type\": \"integer\"\n                  }\n                },\n                \"type\": \"object\"\n              },\n              \"caption\": {\n                \"type\": \"string\"\n              },\n              \"likes\": {\n                \"properties\": {\n                  \"count\": {\n                    \"type\": \"integer\"\n                  },\n                  \"data\": {\n                    \"properties\": {\n                      \"username\": {\n                        \"type\": \"string\"\n                      },\n                      \"full_name\": {\n                        \"type\": \"string\"\n                      },\n                      \"id\": {\n                        \"type\": \"string\"\n                      },\n                      \"profile_picture\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"type\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              },\n              \"link\": {\n                \"type\": \"string\"\n              },\n              \"user\": {\n                \"properties\": {\n                  \"username\": {\n                    \"type\": \"string\"\n                  },\n                  \"profile_picture\": {\n                    \"type\": \"string\"\n                  },\n                  \"id\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              },\n              \"created_time\": {\n                \"type\": \"string\"\n              },\n              \"images\": {\n                \"properties\": {\n                  \"low_resolution\": {\n                    \"properties\": {\n                      \"url\": {\n                        \"type\": \"string\"\n                      },\n                      \"width\": {\n                        \"type\": \"integer\"\n                      },\n                      \"height\": {\n                        \"type\": \"integer\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"thumbnail\": {\n                    \"properties\": {\n                      \"url\": {\n                        \"type\": \"string\"\n                      },\n                      \"width\": {\n                        \"type\": \"integer\"\n                      },\n                      \"height\": {\n                        \"type\": \"integer\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"standard_resolution\": {\n                    \"properties\": {\n                      \"url\": {\n                        \"type\": \"string\"\n                      },\n                      \"width\": {\n                        \"type\": \"integer\"\n                      },\n                      \"height\": {\n                        \"type\": \"integer\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  }\n                },\n                \"type\": \"object\"\n              },\n              \"id\": {\n                \"type\": \"string\"\n              },\n              \"location\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          {\n            \"properties\": {\n              \"distance\": {\n                \"type\": \"number\"\n              },\n              \"type\": {\n                \"type\": \"string\"\n              },\n              \"videos\": {\n                \"properties\": {\n                  \"low_resolution\": {\n                    \"properties\": {\n                      \"url\": {\n                        \"type\": \"string\"\n                      },\n                      \"width\": {\n                        \"type\": \"integer\"\n                      },\n                      \"height\": {\n                        \"type\": \"integer\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"standard_resolution\": {\n                    \"properties\": {\n                      \"url\": {\n                        \"type\": \"string\"\n                      },\n                      \"width\": {\n                        \"type\": \"integer\"\n                      },\n                      \"height\": {\n                        \"type\": \"integer\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"users_in_photo\": {\n                    \"type\": \"string\"\n                  },\n                  \"filter\": {\n                    \"type\": \"string\"\n                  },\n                  \"tags\": {\n                    \"type\": \"array\"\n                  },\n                  \"comments\": {\n                    \"properties\": {\n                      \"data\": {\n                        \"items\": [\n                          {\n                            \"properties\": {\n                              \"created_time\": {\n                                \"type\": \"string\"\n                              },\n                              \"text\": {\n                                \"type\": \"string\"\n                              },\n                              \"from\": {\n                                \"properties\": {\n                                  \"username\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"full_name\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"profile_picture\": {\n                                    \"type\": \"string\"\n                                  }\n                                },\n                                \"type\": \"object\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": \"object\"\n                          }\n                        ]\n                      },\n                      \"count\": {\n                        \"type\": \"integer\"\n                      }\n                    }\n                  },\n                  \"caption\": {\n                    \"type\": \"string\"\n                  },\n                  \"likes\": {\n                    \"properties\": {\n                      \"count\": {\n                        \"type\": \"integer\"\n                      },\n                      \"data\": {\n                        \"items\": [\n                          {\n                            \"properties\": {\n                              \"username\": {\n                                \"type\": \"string\"\n                              },\n                              \"full_name\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              },\n                              \"profile_picture\": {\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": \"object\"\n                          }\n                        ],\n                        \"type\": \"array\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"link\": {\n                    \"type\": \"string\"\n                  },\n                  \"user\": {\n                    \"properties\": {\n                      \"username\": {\n                        \"type\": \"string\"\n                      },\n                      \"full_name\": {\n                        \"type\": \"string\"\n                      },\n                      \"profile_picture\": {\n                        \"type\": \"string\"\n                      },\n                      \"bio\": {\n                        \"type\": \"string\"\n                      },\n                      \"website\": {\n                        \"type\": \"string\"\n                      },\n                      \"id\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"created_time\": {\n                    \"type\": \"string\"\n                  },\n                  \"images\": {\n                    \"properties\": {\n                      \"low_resolution\": {\n                        \"properties\": {\n                          \"url\": {\n                            \"type\": \"string\"\n                          },\n                          \"width\": {\n                            \"type\": \"integer\"\n                          },\n                          \"height\": {\n                            \"type\": \"integer\"\n                          }\n                        },\n                        \"type\": \"object\"\n                      },\n                      \"thumbnail\": {\n                        \"properties\": {\n                          \"url\": {\n                            \"type\": \"string\"\n                          },\n                          \"width\": {\n                            \"type\": \"integer\"\n                          },\n                          \"height\": {\n                            \"type\": \"integer\"\n                          }\n                        },\n                        \"type\": \"object\"\n                      },\n                      \"standard_resolution\": {\n                        \"properties\": {\n                          \"url\": {\n                            \"type\": \"string\"\n                          },\n                          \"width\": {\n                            \"type\": \"integer\"\n                          },\n                          \"height\": {\n                            \"type\": \"integer\"\n                          }\n                        },\n                        \"type\": \"object\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"id\": {\n                    \"type\": \"string\"\n                  },\n                  \"location\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        ]\n      }\n    }\n  }\n}"
		},
		{
			"oembed": "{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"author_id\": {\n            \"type\": \"integer\"\n        },\n        \"author_name\": {\n            \"type\": \"string\"\n        },\n        \"author_url\": {\n            \"type\": \"string\"\n        },\n        \"height\": {\n            \"type\": \"integer\"\n        },\n        \"media_id\": {\n            \"type\": \"string\"\n        },\n        \"provider_name\": {\n            \"type\": \"string\"\n        },\n        \"provider_url\": {\n            \"type\": \"string\"\n        },\n        \"title\": {\n            \"type\": \"string\"\n        },\n        \"type\": {\n            \"type\": \"string\"\n        },\n        \"url\": {\n            \"type\": \"string\"\n        },\n        \"version\": {\n            \"type\": \"string\"\n        },\n        \"width\": {\n            \"type\": \"integer\"\n        }\n    }\n}"
		},
		{
			"relationships": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"meta\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"code\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"data\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"outgoing_status\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"incoming_status\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
		},
		{
			"relationshipsPost": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"meta\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"code\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"data\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"outgoing_status\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
		},
		{
			"requestedBy": "{\n    \"\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"meta\": {\n            \"properties\": {\n                \"code\": {\n                    \"type\": \"integer\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"data\": \n            {\n                \"properties\": {\n                    \"username\": {\n                        \"type\": \"string\"\n                    },\n                    \"profile_picture\": {\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\"\n            }\n        \n    }\n}"
		},
		{
			"tag": "{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n    \t\"data\": {\n    \t\t\"properties\": {\n    \t\t\t\"media_count\": {\n    \t\t\t\t\"type\": \"integer\"\n    \t\t\t},\n    \t\t\t\"name\": {\n    \t\t\t\t\"type\": \"string\"\n    \t\t\t}\n    \t\t},\n    \t\t\"type\": \"object\"\n    \t}\n    }\n}    "
		},
		{
			"tagsRecentMedia": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"data\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"users_in_photo\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n              ]\n            } ,\n            \"filter\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"tags\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            } ,\n            \"comments\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"data\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"object\" ,\n                      \"properties\" : {\n                        \"created_time\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"text\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"from\" : {\n                          \"type\" : \"object\" ,\n                          \"required\" : false ,\n                          \"properties\" : {\n                            \"username\" : {\n                              \"type\" : \"array\" ,\n                              \"required\" : false ,\n                              \"items\" : [\n                                {\n                                  \"type\" : \"string\"\n                                }\n                              ]\n                            } ,\n                            \"id\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            }\n                          }\n                        } ,\n                        \"id\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        }\n                      }\n                    }\n                  ]\n                } ,\n                \"count\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"caption\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"created_time\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"text\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"from\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"username\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"likes\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"count\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"data\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"object\" ,\n                      \"properties\" : {\n                        \"username\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"full_name\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"id\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"profile_picture\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        }\n                      }\n                    }\n                  ]\n                }\n              }\n            } ,\n            \"link\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"user\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"username\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"profile_picture\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"full_name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"created_time\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"images\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"low_resolution\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"url\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"width\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"height\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"thumbnail\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"url\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"width\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"height\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"standard_resolution\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"url\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"width\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"height\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"location\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
		},
		{
			"tagsSearch": "{\n  \"type\": \"object\",\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n  \t\"meta\": {\n  \t\t\"required\": false\n  \t},\n    \"data\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"media_count\": {\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
		},
		{
			"user": "{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"data\": {\n            \"properties\": {\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"type\": \"string\"\n                },\n                \"full_name\": {\n                    \"type\": \"string\"\n                },\n                \"profile_picture\": {\n                    \"type\": \"string\"\n                },\n                \"bio\": {\n                    \"type\": \"string\"\n                },\n                \"website\": {\n                    \"type\": \"string\"\n                },\n                \"counts\": {\n                    \"properties\": {\n                        \"media\": {\n                            \"type\": \"integer\"\n                        },\n                        \"follows\": {\n                            \"type\": \"integer\"\n                        },\n                        \"followed_by\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    \"type\": \"object\"\n                }\n            },\n            \"type\": \"object\"\n        }\n    }\n}"
		},
		{
			"users": "{\n  \"type\": \"object\",\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"data\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"first_name\": {\n            \"type\": \"string\"\n          },\n          \"profile_picture\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"last_name\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
		},
		{
			"okStatus": "{\n\t\"$schema\": \"http://json-schema.org/draft-03/schema\",\n\t\"type\": [\"object\",\"string\"],\t\n\t\"properties\": {\n\t\t\"geo\": {\n\t\t  \"type\": \"object\",\n\t\t  \"properties\": {\n\t\t\t\"address\": {\n\t\t\t  \"type\": \"object\",\n\t\t\t  \"properties\": {\n\t\t\t\t\"city\": {\n\t\t\t\t  \"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"streetAddress\": {\n\t\t\t\t  \"type\": \"string\"\n\t\t\t\t}\n\t\t\t  }\n\t\t\t},\n\t\t\t\"age\": {\n\t\t\t  \"type\": \"number\"\n\t\t\t}\n\t\t  }\n\t\t}\n\t}\n}"
		},
		{
			"subscriptionPost": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"meta\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"code\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"data\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"object\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"object_id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"aspect\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"callback_url\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"type\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"lng\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"lat\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"radius\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
		},
		{
			"subscriptionsGet": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"meta\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"code\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"data\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"object\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"aspect\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"callback_url\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"object_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } , {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"object\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"object_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"aspect\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"callback_url\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
		},
		{
			"subscriptionsDelete": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"meta\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"code\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"data\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false\n    }\n  }\n}"
		}
	],
	"traits": {
		"acceptCallback": {
			"securedBy": [
				"oauth_2_0",
				"clientId"
			],
			"queryParameters": {
				"callback": {
					"name": "callback",
					"displayName": "callback",
					"type": "string",
					"required": false,
					"example": "callbackFunction",
					"repeat": false,
					"description": "Callback function name. All output will be wrapper under this function name.\n",
					"__METADATA__": {
						"primitiveValuesMeta": {
							"displayName": {
								"calculated": true
							},
							"type": {
								"insertedAsDefault": true
							},
							"required": {
								"insertedAsDefault": true
							},
							"repeat": {
								"insertedAsDefault": true
							}
						}
					}
				}
			},
			"name": "acceptCallback",
			"__METADATA__": {
				"primitiveValuesMeta": {
					"securedBy": {
						"calculated": true
					}
				}
			}
		},
		"limitableByGeoPoint": {
			"securedBy": [
				"oauth_2_0",
				"clientId"
			],
			"queryParameters": {
				"lat": {
					"name": "lat",
					"displayName": "lat",
					"type": "number",
					"required": false,
					"repeat": false,
					"description": "Latitude of the center search coordinate. If used, lng is required.",
					"__METADATA__": {
						"primitiveValuesMeta": {
							"displayName": {
								"calculated": true
							},
							"required": {
								"insertedAsDefault": true
							},
							"repeat": {
								"insertedAsDefault": true
							}
						}
					}
				},
				"lng": {
					"name": "lng",
					"displayName": "lng",
					"type": "number",
					"required": false,
					"repeat": false,
					"description": "Longitude of the center search coordinate. If used, lat is required.",
					"__METADATA__": {
						"primitiveValuesMeta": {
							"displayName": {
								"calculated": true
							},
							"required": {
								"insertedAsDefault": true
							},
							"repeat": {
								"insertedAsDefault": true
							}
						}
					}
				},
				"distance": {
					"name": "distance",
					"displayName": "distance",
					"type": "integer",
					"required": false,
					"default": 1000,
					"repeat": false,
					"description": "Default is 1000m (distance=1000), max distance is 5000.",
					"maximum": 5000,
					"__METADATA__": {
						"primitiveValuesMeta": {
							"displayName": {
								"calculated": true
							},
							"required": {
								"insertedAsDefault": true
							},
							"repeat": {
								"insertedAsDefault": true
							}
						}
					}
				}
			},
			"name": "limitableByGeoPoint",
			"__METADATA__": {
				"primitiveValuesMeta": {
					"securedBy": {
						"calculated": true
					}
				}
			}
		},
		"limitable": {
			"securedBy": [
				"oauth_2_0",
				"clientId"
			],
			"queryParameters": {
				"count": {
					"name": "count",
					"displayName": "count",
					"type": "integer",
					"required": false,
					"example": "1",
					"repeat": false,
					"description": "Number of items you would like to receive.",
					"__METADATA__": {
						"primitiveValuesMeta": {
							"displayName": {
								"calculated": true
							},
							"required": {
								"insertedAsDefault": true
							},
							"repeat": {
								"insertedAsDefault": true
							}
						}
					}
				}
			},
			"name": "limitable",
			"__METADATA__": {
				"primitiveValuesMeta": {
					"securedBy": {
						"calculated": true
					}
				}
			}
		},
		"limitableByTime": {
			"securedBy": [
				"oauth_2_0",
				"clientId"
			],
			"queryParameters": {
				"max_timestamp": {
					"name": "max_timestamp",
					"displayName": "max_timestamp",
					"type": "integer",
					"required": false,
					"repeat": false,
					"description": "Return media before this UNIX timestamp.",
					"__METADATA__": {
						"primitiveValuesMeta": {
							"displayName": {
								"calculated": true
							},
							"required": {
								"insertedAsDefault": true
							},
							"repeat": {
								"insertedAsDefault": true
							}
						}
					}
				},
				"min_timestamp": {
					"name": "min_timestamp",
					"displayName": "min_timestamp",
					"type": "integer",
					"required": false,
					"repeat": false,
					"description": "Return media after this UNIX timestamp.",
					"__METADATA__": {
						"primitiveValuesMeta": {
							"displayName": {
								"calculated": true
							},
							"required": {
								"insertedAsDefault": true
							},
							"repeat": {
								"insertedAsDefault": true
							}
						}
					}
				}
			},
			"name": "limitableByTime",
			"__METADATA__": {
				"primitiveValuesMeta": {
					"securedBy": {
						"calculated": true
					}
				}
			}
		},
		"limitableById": {
			"securedBy": [
				"oauth_2_0",
				"clientId"
			],
			"queryParameters": {
				"min_id": {
					"name": "min_id",
					"displayName": "min_id",
					"type": "integer",
					"required": false,
					"repeat": false,
					"description": "Return media later than this min_id.",
					"__METADATA__": {
						"primitiveValuesMeta": {
							"displayName": {
								"calculated": true
							},
							"required": {
								"insertedAsDefault": true
							},
							"repeat": {
								"insertedAsDefault": true
							}
						}
					}
				},
				"max_id": {
					"name": "max_id",
					"displayName": "max_id",
					"type": "integer",
					"required": false,
					"repeat": false,
					"description": "Return media earlier than this max_id.",
					"__METADATA__": {
						"primitiveValuesMeta": {
							"displayName": {
								"calculated": true
							},
							"required": {
								"insertedAsDefault": true
							},
							"repeat": {
								"insertedAsDefault": true
							}
						}
					}
				}
			},
			"name": "limitableById",
			"__METADATA__": {
				"primitiveValuesMeta": {
					"securedBy": {
						"calculated": true
					}
				}
			}
		}
	},
	"securedBy": [
		"oauth_2_0",
		"clientId"
	],
	"securitySchemes": {
		"oauth_2_0": {
			"name": "oauth_2_0",
			"type": "OAuth 2.0",
			"description": "Instagram's API uses the OAuth 2.0 protocol for simple, but effective\nauthentication and authorization. The one thing to keep in mind is tha\nall requests to the API must be made over SSL (https:// not http://)\n",
			"describedBy": {
				"securedBy": [
					"oauth_2_0",
					"clientId"
				],
				"queryParameters": {
					"access_token": {
						"name": "access_token",
						"displayName": "access_token",
						"type": "string",
						"required": false,
						"repeat": false,
						"description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
						"__METADATA__": {
							"primitiveValuesMeta": {
								"displayName": {
									"calculated": true
								},
								"type": {
									"insertedAsDefault": true
								},
								"required": {
									"insertedAsDefault": true
								},
								"repeat": {
									"insertedAsDefault": true
								}
							}
						}
					}
				},
				"__METADATA__": {
					"primitiveValuesMeta": {
						"securedBy": {
							"calculated": true
						}
					}
				}
			},
			"settings": {
				"accessTokenUri": "https://api.instagram.com/oauth/access_token",
				"authorizationUri": "https://api.instagram.com/oauth/authorize",
				"authorizationGrants": [
					"code",
					"token"
				],
				"scopes": [
					"basic",
					"comments",
					"relationships",
					"likes"
				]
			}
		},
		"clientId": {
			"name": "clientId",
			"type": "x-customHeader",
			"description": "in many situations, you may not need to authenticate users at all.\nFor instance, you may request popular photos without authenticating\n(i.e. you do not need to provide an access_token; just use your client ID with your request).\nWe only require authentication in cases where your application is making requests on behalf of a user\n(commenting, liking, browsing a user's feed, etc.).\n",
			"describedBy": {
				"securedBy": [
					"oauth_2_0",
					"clientId"
				],
				"queryParameters": {
					"client_id": {
						"name": "client_id",
						"displayName": "client_id",
						"type": "string",
						"required": false,
						"example": "9e0dbc0a3b8d436ca65ae2df9825c893",
						"repeat": false,
						"description": "Client_id is is identifier of  your server, script, or program with a specific application\nthis parameter is required if you are accessing APIs without authenticating\n",
						"__METADATA__": {
							"primitiveValuesMeta": {
								"displayName": {
									"calculated": true
								},
								"type": {
									"insertedAsDefault": true
								},
								"required": {
									"insertedAsDefault": true
								},
								"repeat": {
									"insertedAsDefault": true
								}
							}
						}
					}
				},
				"__METADATA__": {
					"primitiveValuesMeta": {
						"securedBy": {
							"calculated": true
						}
					}
				}
			}
		}
	},
	"resourceTypes": {
		"usersListing": {
			"name": "usersListing",
			"methods": {
				"get": {
					"responses": {
						"200": {
							"code": "200",
							"body": {
								"application/json": {
									"name": "application/json",
									"schema": "users",
									"example": "{\n    \"data\": [{\n        \"username\": \"jack\",\n        \"first_name\": \"Jack\",\n        \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_66_75sq.jpg\",\n        \"id\": \"66\",\n        \"last_name\": \"Dorsey\"\n    },\n    {\n        \"username\": \"sammyjack\",\n        \"first_name\": \"Sammy\",\n        \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_29648_75sq_1294520029.jpg\",\n        \"id\": \"29648\",\n        \"last_name\": \"Jack\"\n    },\n    {\n        \"username\": \"jacktiddy\",\n        \"first_name\": \"Jack\",\n        \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_13096_75sq_1286441317.jpg\",\n        \"id\": \"13096\",\n        \"last_name\": \"Tiddy\"\n    }]\n}",
									"schemaContent": "{\n  \"type\": \"object\",\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"data\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"first_name\": {\n            \"type\": \"string\"\n          },\n          \"profile_picture\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"last_name\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
								}
							}
						}
					},
					"securedBy": [
						{
							"oauth_2_0": {
								"scopes": [
									"relationships"
								],
								"clientId": []
							}
						}
					],
					"method": "get",
					"__METADATA__": {
						"primitiveValuesMeta": {
							"securedBy": {
								"calculated": true
							}
						}
					}
				}
			},
			"type": "base",
			"securedBy": [
				{
					"oauth_2_0": {
						"scopes": [
							"relationships"
						],
						"clientId": []
					}
				}
			]
		},
		"mediaSearch": {
			"name": "mediaSearch",
			"methods": {
				"get": {
					"responses": {
						"200": {
							"code": "200",
							"body": {
								"application/json": {
									"name": "application/json",
									"schema": "mediaSearch",
									"example": "{\n    \"meta\": {\n        \"code\": 200\n    },\n    \"data\": [{\n        \"distance\": 41.741369194629698,\n        \"type\": \"image\",\n        \"users_in_photo\": [],\n        \"filter\": \"Earlybird\",\n        \"tags\": [],\n        \"comments\": {  },\n        \"caption\": null,\n        \"likes\": {  },\n        \"link\": \"http://instagr.am/p/BQEEq/\",\n        \"user\": {\n            \"username\": \"mahaface\",\n            \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_1329896_75sq_1294131373.jpg\",\n            \"id\": \"1329896\"\n        },\n        \"created_time\": \"1296251679\",\n        \"images\": {\n            \"low_resolution\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2011/01/28/0cc4f24f25654b1c8d655835c58b850a_6.jpg\",\n                \"width\": 306,\n                \"height\": 306\n            },\n            \"thumbnail\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2011/01/28/0cc4f24f25654b1c8d655835c58b850a_5.jpg\",\n                \"width\": 150,\n                \"height\": 150\n            },\n            \"standard_resolution\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2011/01/28/0cc4f24f25654b1c8d655835c58b850a_7.jpg\",\n                \"width\": 612,\n                \"height\": 612\n            }\n        },\n        \"id\": \"20988202\",\n        \"location\": null\n    }\n\t]\n}",
									"schemaContent": "{\n  \"type\": \"object\",\n  \"$schema\": \"http://json-schema.org/draft-04/schema\",\n  \"properties\": {\n    \"meta\": {\n      \"type\": \"object\"\n    },\n    \"data\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"oneOf\": [\n          {\n            \"properties\": {\n              \"distance\": {\n                \"type\": \"number\"\n              },\n              \"type\": {\n                \"type\": \"string\"\n              },\n              \"users_in_photo\": {\n                \"type\": \"string\"\n              },\n              \"filter\": {\n                \"type\": \"string\"\n              },\n              \"tags\": {\n                \"type\": \"array\"\n              },\n              \"comments\": {\n                \"properties\": {\n                  \"data\": {\n                    \"properties\": {\n                      \"created_time\": {\n                        \"type\": \"string\"\n                      },\n                      \"text\": {\n                        \"type\": \"string\"\n                      },\n                      \"from\": {\n                        \"properties\": {\n                          \"username\": {\n                            \"type\": \"string\"\n                          },\n                          \"full_name\": {\n                            \"type\": \"string\"\n                          },\n                          \"id\": {\n                            \"type\": \"string\"\n                          },\n                          \"profile_picture\": {\n                            \"type\": \"string\"\n                          }\n                        },\n                        \"type\": \"object\"\n                      },\n                      \"id\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"type\": {\n                    \"type\": \"string\"\n                  },\n                  \"count\": {\n                    \"type\": \"integer\"\n                  }\n                },\n                \"type\": \"object\"\n              },\n              \"caption\": {\n                \"type\": \"string\"\n              },\n              \"likes\": {\n                \"properties\": {\n                  \"count\": {\n                    \"type\": \"integer\"\n                  },\n                  \"data\": {\n                    \"properties\": {\n                      \"username\": {\n                        \"type\": \"string\"\n                      },\n                      \"full_name\": {\n                        \"type\": \"string\"\n                      },\n                      \"id\": {\n                        \"type\": \"string\"\n                      },\n                      \"profile_picture\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"type\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              },\n              \"link\": {\n                \"type\": \"string\"\n              },\n              \"user\": {\n                \"properties\": {\n                  \"username\": {\n                    \"type\": \"string\"\n                  },\n                  \"profile_picture\": {\n                    \"type\": \"string\"\n                  },\n                  \"id\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              },\n              \"created_time\": {\n                \"type\": \"string\"\n              },\n              \"images\": {\n                \"properties\": {\n                  \"low_resolution\": {\n                    \"properties\": {\n                      \"url\": {\n                        \"type\": \"string\"\n                      },\n                      \"width\": {\n                        \"type\": \"integer\"\n                      },\n                      \"height\": {\n                        \"type\": \"integer\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"thumbnail\": {\n                    \"properties\": {\n                      \"url\": {\n                        \"type\": \"string\"\n                      },\n                      \"width\": {\n                        \"type\": \"integer\"\n                      },\n                      \"height\": {\n                        \"type\": \"integer\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"standard_resolution\": {\n                    \"properties\": {\n                      \"url\": {\n                        \"type\": \"string\"\n                      },\n                      \"width\": {\n                        \"type\": \"integer\"\n                      },\n                      \"height\": {\n                        \"type\": \"integer\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  }\n                },\n                \"type\": \"object\"\n              },\n              \"id\": {\n                \"type\": \"string\"\n              },\n              \"location\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          {\n            \"properties\": {\n              \"distance\": {\n                \"type\": \"number\"\n              },\n              \"type\": {\n                \"type\": \"string\"\n              },\n              \"videos\": {\n                \"properties\": {\n                  \"low_resolution\": {\n                    \"properties\": {\n                      \"url\": {\n                        \"type\": \"string\"\n                      },\n                      \"width\": {\n                        \"type\": \"integer\"\n                      },\n                      \"height\": {\n                        \"type\": \"integer\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"standard_resolution\": {\n                    \"properties\": {\n                      \"url\": {\n                        \"type\": \"string\"\n                      },\n                      \"width\": {\n                        \"type\": \"integer\"\n                      },\n                      \"height\": {\n                        \"type\": \"integer\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"users_in_photo\": {\n                    \"type\": \"string\"\n                  },\n                  \"filter\": {\n                    \"type\": \"string\"\n                  },\n                  \"tags\": {\n                    \"type\": \"array\"\n                  },\n                  \"comments\": {\n                    \"properties\": {\n                      \"data\": {\n                        \"items\": [\n                          {\n                            \"properties\": {\n                              \"created_time\": {\n                                \"type\": \"string\"\n                              },\n                              \"text\": {\n                                \"type\": \"string\"\n                              },\n                              \"from\": {\n                                \"properties\": {\n                                  \"username\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"full_name\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"profile_picture\": {\n                                    \"type\": \"string\"\n                                  }\n                                },\n                                \"type\": \"object\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": \"object\"\n                          }\n                        ]\n                      },\n                      \"count\": {\n                        \"type\": \"integer\"\n                      }\n                    }\n                  },\n                  \"caption\": {\n                    \"type\": \"string\"\n                  },\n                  \"likes\": {\n                    \"properties\": {\n                      \"count\": {\n                        \"type\": \"integer\"\n                      },\n                      \"data\": {\n                        \"items\": [\n                          {\n                            \"properties\": {\n                              \"username\": {\n                                \"type\": \"string\"\n                              },\n                              \"full_name\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              },\n                              \"profile_picture\": {\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": \"object\"\n                          }\n                        ],\n                        \"type\": \"array\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"link\": {\n                    \"type\": \"string\"\n                  },\n                  \"user\": {\n                    \"properties\": {\n                      \"username\": {\n                        \"type\": \"string\"\n                      },\n                      \"full_name\": {\n                        \"type\": \"string\"\n                      },\n                      \"profile_picture\": {\n                        \"type\": \"string\"\n                      },\n                      \"bio\": {\n                        \"type\": \"string\"\n                      },\n                      \"website\": {\n                        \"type\": \"string\"\n                      },\n                      \"id\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"created_time\": {\n                    \"type\": \"string\"\n                  },\n                  \"images\": {\n                    \"properties\": {\n                      \"low_resolution\": {\n                        \"properties\": {\n                          \"url\": {\n                            \"type\": \"string\"\n                          },\n                          \"width\": {\n                            \"type\": \"integer\"\n                          },\n                          \"height\": {\n                            \"type\": \"integer\"\n                          }\n                        },\n                        \"type\": \"object\"\n                      },\n                      \"thumbnail\": {\n                        \"properties\": {\n                          \"url\": {\n                            \"type\": \"string\"\n                          },\n                          \"width\": {\n                            \"type\": \"integer\"\n                          },\n                          \"height\": {\n                            \"type\": \"integer\"\n                          }\n                        },\n                        \"type\": \"object\"\n                      },\n                      \"standard_resolution\": {\n                        \"properties\": {\n                          \"url\": {\n                            \"type\": \"string\"\n                          },\n                          \"width\": {\n                            \"type\": \"integer\"\n                          },\n                          \"height\": {\n                            \"type\": \"integer\"\n                          }\n                        },\n                        \"type\": \"object\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"id\": {\n                    \"type\": \"string\"\n                  },\n                  \"location\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        ]\n      }\n    }\n  }\n}"
								}
							}
						}
					},
					"securedBy": [
						"oauth_2_0",
						"clientId"
					],
					"method": "get",
					"__METADATA__": {
						"primitiveValuesMeta": {
							"securedBy": {
								"calculated": true
							}
						}
					}
				}
			},
			"type": "base",
			"securedBy": [
				"oauth_2_0",
				"clientId"
			],
			"__METADATA__": {
				"primitiveValuesMeta": {
					"securedBy": {
						"calculated": true
					}
				}
			}
		},
		"secured": {
			"name": "secured",
			"methods": {
				"delete": {
					"responses": {
						"200": {
							"code": "200",
							"body": {
								"application/json": {
									"name": "application/json",
									"schema": "okStatus",
									"example": "{\n    \"meta\": {\n        \"code\": 200\n    }, \n    \"data\": null\n}",
									"schemaContent": "{\n\t\"$schema\": \"http://json-schema.org/draft-03/schema\",\n\t\"type\": [\"object\",\"string\"],\t\n\t\"properties\": {\n\t\t\"geo\": {\n\t\t  \"type\": \"object\",\n\t\t  \"properties\": {\n\t\t\t\"address\": {\n\t\t\t  \"type\": \"object\",\n\t\t\t  \"properties\": {\n\t\t\t\t\"city\": {\n\t\t\t\t  \"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"streetAddress\": {\n\t\t\t\t  \"type\": \"string\"\n\t\t\t\t}\n\t\t\t  }\n\t\t\t},\n\t\t\t\"age\": {\n\t\t\t  \"type\": \"number\"\n\t\t\t}\n\t\t  }\n\t\t}\n\t}\n}"
								}
							}
						}
					},
					"securedBy": [
						{
							"oauth_2_0": {
								"scopes": [
									"<<scope>>"
								]
							}
						}
					],
					"method": "delete",
					"__METADATA__": {
						"optional": true
					}
				},
				"post": {
					"responses": {
						"200": {
							"code": "200",
							"body": {
								"application/json": {
									"name": "application/json",
									"schema": "okStatus",
									"example": "{\n    \"meta\": {\n        \"code\": 200\n    }, \n    \"data\": null\n}",
									"schemaContent": "{\n\t\"$schema\": \"http://json-schema.org/draft-03/schema\",\n\t\"type\": [\"object\",\"string\"],\t\n\t\"properties\": {\n\t\t\"geo\": {\n\t\t  \"type\": \"object\",\n\t\t  \"properties\": {\n\t\t\t\"address\": {\n\t\t\t  \"type\": \"object\",\n\t\t\t  \"properties\": {\n\t\t\t\t\"city\": {\n\t\t\t\t  \"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"streetAddress\": {\n\t\t\t\t  \"type\": \"string\"\n\t\t\t\t}\n\t\t\t  }\n\t\t\t},\n\t\t\t\"age\": {\n\t\t\t  \"type\": \"number\"\n\t\t\t}\n\t\t  }\n\t\t}\n\t}\n}"
								}
							}
						}
					},
					"securedBy": [
						{
							"oauth_2_0": {
								"scopes": [
									"<<scope>>"
								]
							}
						}
					],
					"method": "post",
					"__METADATA__": {
						"optional": true
					}
				}
			},
			"type": "base",
			"securedBy": [
				{
					"oauth_2_0": {
						"scopes": [
							"<<scope>>"
						],
						"clientId": []
					}
				}
			]
		},
		"base": {
			"name": "base",
			"methods": {
				"delete": {
					"responses": {
						"503": {
							"code": "503",
							"description": "Server Unavailable. Check Your Rate Limits.\n"
						}
					},
					"securedBy": [
						"oauth_2_0",
						"clientId"
					],
					"method": "delete",
					"__METADATA__": {
						"optional": true,
						"primitiveValuesMeta": {
							"securedBy": {
								"calculated": true
							}
						}
					}
				},
				"post": {
					"responses": {
						"503": {
							"code": "503",
							"description": "Server Unavailable. Check Your Rate Limits.\n"
						}
					},
					"securedBy": [
						"oauth_2_0",
						"clientId"
					],
					"method": "post",
					"__METADATA__": {
						"optional": true,
						"primitiveValuesMeta": {
							"securedBy": {
								"calculated": true
							}
						}
					}
				},
				"get": {
					"responses": {
						"503": {
							"code": "503",
							"description": "Server Unavailable. Check Your Rate Limits.\n"
						}
					},
					"securedBy": [
						"oauth_2_0",
						"clientId"
					],
					"method": "get",
					"is": [
						"limitable",
						"acceptCallback"
					],
					"__METADATA__": {
						"optional": true,
						"primitiveValuesMeta": {
							"securedBy": {
								"calculated": true
							}
						}
					}
				}
			},
			"securedBy": [
				"oauth_2_0",
				"clientId"
			],
			"__METADATA__": {
				"primitiveValuesMeta": {
					"securedBy": {
						"calculated": true
					}
				}
			}
		},
		"feedsListing": {
			"name": "feedsListing",
			"methods": {
				"get": {
					"responses": {
						"200": {
							"code": "200",
							"body": {
								"application/json": {
									"name": "application/json",
									"schema": "mediaSearch",
									"example": "{\n    \"data\": [{\n        \"location\": {\n            \"id\": \"833\",\n            \"latitude\": 37.77956816727314,\n            \"longitude\": -122.41387367248539,\n            \"name\": \"Civic Center BART\"\n        },\n        \"comments\": {\n            \"count\": 16,\n            \"data\": [  ]\n        },\n        \"caption\": null,\n        \"link\": \"http://instagr.am/p/BXsFz/\",\n        \"likes\": {\n            \"count\": 190,\n            \"data\": [{\n                \"username\": \"shayne\",\n                \"full_name\": \"Shayne Sweeney\",\n                \"id\": \"20\",\n                \"profile_picture\": \"...\"\n            }, {}]\n        },\n        \"created_time\": \"1296748524\",\n        \"images\": {\n            \"low_resolution\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2011/02/03/efc502667a554329b52d9a6bab35b24a_6.jpg\",\n                \"width\": 306,\n                \"height\": 306\n            },\n            \"thumbnail\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2011/02/03/efc502667a554329b52d9a6bab35b24a_5.jpg\",\n                \"width\": 150,\n                \"height\": 150\n            },\n            \"standard_resolution\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2011/02/03/efc502667a554329b52d9a6bab35b24a_7.jpg\",\n                \"width\": 612,\n                \"height\": 612\n            }\n        },\n        \"type\": \"image\",\n        \"users_in_photo\": [],\n        \"filter\": \"Earlybird\",\n        \"tags\": [],\n        \"id\": \"22987123\",\n        \"user\": {\n            \"username\": \"kevin\",\n            \"full_name\": \"Kevin S\",\n            \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_3_75sq_1295574122.jpg\",\n            \"id\": \"3\"\n        }\n    },\n    {\n        \"videos\": {\n            \"low_resolution\": {\n                \"url\": \"http://distilleryvesper9-13.ak.instagram.com/090d06dad9cd11e2aa0912313817975d_102.mp4\",\n                \"width\": 480,\n                \"height\": 480\n            },\n            \"standard_resolution\": {\n                \"url\": \"http://distilleryvesper9-13.ak.instagram.com/090d06dad9cd11e2aa0912313817975d_101.mp4\",\n                \"width\": 640,\n                \"height\": 640\n            },\n        \"comments\": {\n            \"data\": [{\n                \"created_time\": \"1279332030\",\n                \"text\": \"Love the sign here\",\n                \"from\": {\n                    \"username\": \"mikeyk\",\n                    \"full_name\": \"Mikey Krieger\",\n                    \"id\": \"4\",\n                    \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_1242695_75sq_1293915800.jpg\"\n                },\n                \"id\": \"8\"\n            },\n            {\n                \"created_time\": \"1279341004\",\n                \"text\": \"Chilako taco\",\n                \"from\": {\n                    \"username\": \"kevin\",\n                    \"full_name\": \"Kevin S\",\n                    \"id\": \"3\",\n                    \"profile_picture\": \"...\"\n                },\n                \"id\": \"3\"\n            }],\n            \"count\": 2\n        },\n        \"caption\": null,\n        \"likes\": {\n            \"count\": 1,\n            \"data\": [{\n                \"username\": \"mikeyk\",\n                \"full_name\": \"Mikeyk\",\n                \"id\": \"4\",\n                \"profile_picture\": \"...\"\n            }]\n        },\n        \"link\": \"http://instagr.am/p/D/\",\n        \"created_time\": \"1279340983\",\n        \"images\": {\n            \"low_resolution\": {\n                \"url\": \"http://distilleryimage2.ak.instagram.com/11f75f1cd9cc11e2a0fd22000aa8039a_6.jpg\",\n                \"width\": 306,\n                \"height\": 306\n            },\n            \"thumbnail\": {\n                \"url\": \"http://distilleryimage2.ak.instagram.com/11f75f1cd9cc11e2a0fd22000aa8039a_5.jpg\",\n                \"width\": 150,\n                \"height\": 150\n            },\n            \"standard_resolution\": {\n                \"url\": \"http://distilleryimage2.ak.instagram.com/11f75f1cd9cc11e2a0fd22000aa8039a_7.jpg\",\n                \"width\": 612,\n                \"height\": 612\n            }\n        },\n        \"type\": \"video\",\n        \"users_in_photo\": null,\n        \"filter\": \"Vesper\",\n        \"tags\": [],\n        \"id\": \"363839373298\",\n        \"user\": {\n            \"username\": \"kevin\",\n            \"full_name\": \"Kevin S\",\n            \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_3_75sq_1295574122.jpg\",\n            \"id\": \"3\"\n        },\n        \"location\": null\n    }}]\n}",
									"schemaContent": "{\n  \"type\": \"object\",\n  \"$schema\": \"http://json-schema.org/draft-04/schema\",\n  \"properties\": {\n    \"meta\": {\n      \"type\": \"object\"\n    },\n    \"data\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"oneOf\": [\n          {\n            \"properties\": {\n              \"distance\": {\n                \"type\": \"number\"\n              },\n              \"type\": {\n                \"type\": \"string\"\n              },\n              \"users_in_photo\": {\n                \"type\": \"string\"\n              },\n              \"filter\": {\n                \"type\": \"string\"\n              },\n              \"tags\": {\n                \"type\": \"array\"\n              },\n              \"comments\": {\n                \"properties\": {\n                  \"data\": {\n                    \"properties\": {\n                      \"created_time\": {\n                        \"type\": \"string\"\n                      },\n                      \"text\": {\n                        \"type\": \"string\"\n                      },\n                      \"from\": {\n                        \"properties\": {\n                          \"username\": {\n                            \"type\": \"string\"\n                          },\n                          \"full_name\": {\n                            \"type\": \"string\"\n                          },\n                          \"id\": {\n                            \"type\": \"string\"\n                          },\n                          \"profile_picture\": {\n                            \"type\": \"string\"\n                          }\n                        },\n                        \"type\": \"object\"\n                      },\n                      \"id\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"type\": {\n                    \"type\": \"string\"\n                  },\n                  \"count\": {\n                    \"type\": \"integer\"\n                  }\n                },\n                \"type\": \"object\"\n              },\n              \"caption\": {\n                \"type\": \"string\"\n              },\n              \"likes\": {\n                \"properties\": {\n                  \"count\": {\n                    \"type\": \"integer\"\n                  },\n                  \"data\": {\n                    \"properties\": {\n                      \"username\": {\n                        \"type\": \"string\"\n                      },\n                      \"full_name\": {\n                        \"type\": \"string\"\n                      },\n                      \"id\": {\n                        \"type\": \"string\"\n                      },\n                      \"profile_picture\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"type\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              },\n              \"link\": {\n                \"type\": \"string\"\n              },\n              \"user\": {\n                \"properties\": {\n                  \"username\": {\n                    \"type\": \"string\"\n                  },\n                  \"profile_picture\": {\n                    \"type\": \"string\"\n                  },\n                  \"id\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              },\n              \"created_time\": {\n                \"type\": \"string\"\n              },\n              \"images\": {\n                \"properties\": {\n                  \"low_resolution\": {\n                    \"properties\": {\n                      \"url\": {\n                        \"type\": \"string\"\n                      },\n                      \"width\": {\n                        \"type\": \"integer\"\n                      },\n                      \"height\": {\n                        \"type\": \"integer\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"thumbnail\": {\n                    \"properties\": {\n                      \"url\": {\n                        \"type\": \"string\"\n                      },\n                      \"width\": {\n                        \"type\": \"integer\"\n                      },\n                      \"height\": {\n                        \"type\": \"integer\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"standard_resolution\": {\n                    \"properties\": {\n                      \"url\": {\n                        \"type\": \"string\"\n                      },\n                      \"width\": {\n                        \"type\": \"integer\"\n                      },\n                      \"height\": {\n                        \"type\": \"integer\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  }\n                },\n                \"type\": \"object\"\n              },\n              \"id\": {\n                \"type\": \"string\"\n              },\n              \"location\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          {\n            \"properties\": {\n              \"distance\": {\n                \"type\": \"number\"\n              },\n              \"type\": {\n                \"type\": \"string\"\n              },\n              \"videos\": {\n                \"properties\": {\n                  \"low_resolution\": {\n                    \"properties\": {\n                      \"url\": {\n                        \"type\": \"string\"\n                      },\n                      \"width\": {\n                        \"type\": \"integer\"\n                      },\n                      \"height\": {\n                        \"type\": \"integer\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"standard_resolution\": {\n                    \"properties\": {\n                      \"url\": {\n                        \"type\": \"string\"\n                      },\n                      \"width\": {\n                        \"type\": \"integer\"\n                      },\n                      \"height\": {\n                        \"type\": \"integer\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"users_in_photo\": {\n                    \"type\": \"string\"\n                  },\n                  \"filter\": {\n                    \"type\": \"string\"\n                  },\n                  \"tags\": {\n                    \"type\": \"array\"\n                  },\n                  \"comments\": {\n                    \"properties\": {\n                      \"data\": {\n                        \"items\": [\n                          {\n                            \"properties\": {\n                              \"created_time\": {\n                                \"type\": \"string\"\n                              },\n                              \"text\": {\n                                \"type\": \"string\"\n                              },\n                              \"from\": {\n                                \"properties\": {\n                                  \"username\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"full_name\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"profile_picture\": {\n                                    \"type\": \"string\"\n                                  }\n                                },\n                                \"type\": \"object\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": \"object\"\n                          }\n                        ]\n                      },\n                      \"count\": {\n                        \"type\": \"integer\"\n                      }\n                    }\n                  },\n                  \"caption\": {\n                    \"type\": \"string\"\n                  },\n                  \"likes\": {\n                    \"properties\": {\n                      \"count\": {\n                        \"type\": \"integer\"\n                      },\n                      \"data\": {\n                        \"items\": [\n                          {\n                            \"properties\": {\n                              \"username\": {\n                                \"type\": \"string\"\n                              },\n                              \"full_name\": {\n                                \"type\": \"string\"\n                              },\n                              \"id\": {\n                                \"type\": \"string\"\n                              },\n                              \"profile_picture\": {\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": \"object\"\n                          }\n                        ],\n                        \"type\": \"array\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"link\": {\n                    \"type\": \"string\"\n                  },\n                  \"user\": {\n                    \"properties\": {\n                      \"username\": {\n                        \"type\": \"string\"\n                      },\n                      \"full_name\": {\n                        \"type\": \"string\"\n                      },\n                      \"profile_picture\": {\n                        \"type\": \"string\"\n                      },\n                      \"bio\": {\n                        \"type\": \"string\"\n                      },\n                      \"website\": {\n                        \"type\": \"string\"\n                      },\n                      \"id\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"created_time\": {\n                    \"type\": \"string\"\n                  },\n                  \"images\": {\n                    \"properties\": {\n                      \"low_resolution\": {\n                        \"properties\": {\n                          \"url\": {\n                            \"type\": \"string\"\n                          },\n                          \"width\": {\n                            \"type\": \"integer\"\n                          },\n                          \"height\": {\n                            \"type\": \"integer\"\n                          }\n                        },\n                        \"type\": \"object\"\n                      },\n                      \"thumbnail\": {\n                        \"properties\": {\n                          \"url\": {\n                            \"type\": \"string\"\n                          },\n                          \"width\": {\n                            \"type\": \"integer\"\n                          },\n                          \"height\": {\n                            \"type\": \"integer\"\n                          }\n                        },\n                        \"type\": \"object\"\n                      },\n                      \"standard_resolution\": {\n                        \"properties\": {\n                          \"url\": {\n                            \"type\": \"string\"\n                          },\n                          \"width\": {\n                            \"type\": \"integer\"\n                          },\n                          \"height\": {\n                            \"type\": \"integer\"\n                          }\n                        },\n                        \"type\": \"object\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"id\": {\n                    \"type\": \"string\"\n                  },\n                  \"location\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        ]\n      }\n    }\n  }\n}"
								}
							}
						}
					},
					"securedBy": [
						"oauth_2_0",
						"clientId"
					],
					"method": "get",
					"__METADATA__": {
						"primitiveValuesMeta": {
							"securedBy": {
								"calculated": true
							}
						}
					}
				}
			},
			"type": "base",
			"securedBy": [
				"oauth_2_0",
				"clientId"
			],
			"__METADATA__": {
				"primitiveValuesMeta": {
					"securedBy": {
						"calculated": true
					}
				}
			}
		}
	},
	"resources": [
		{
			"relativeUri": "/media",
			"securedBy": [
				"oauth_2_0",
				"clientId"
			],
			"resources": [
				{
					"relativeUri": "/{mediaId}",
					"type": "base",
					"securedBy": [
						"oauth_2_0",
						"clientId"
					],
					"uriParameters": {
						"mediaId": {
							"name": "mediaId",
							"displayName": "mediaId",
							"type": "string",
							"required": true,
							"repeat": false,
							"__METADATA__": {
								"calculated": true,
								"primitiveValuesMeta": {
									"displayName": {
										"calculated": true
									},
									"type": {
										"insertedAsDefault": true
									},
									"required": {
										"insertedAsDefault": true
									},
									"repeat": {
										"insertedAsDefault": true
									}
								}
							}
						}
					},
					"methods": {
						"get": {
							"responses": {
								"200": {
									"code": "200",
									"body": {
										"application/json": {
											"name": "application/json",
											"schema": "media",
											"example": "{\n    \"data\": {\n        \"type\": \"image\",\n        \"users_in_photo\": [{\n            \"user\": {\n                \"username\": \"kevin\",\n                \"full_name\": \"Kevin S\",\n                \"id\": \"3\",\n                \"profile_picture\": \"...\"\n            },\n            \"position\": {\n                \"x\": 0.315,\n                \"y\": 0.9111\n            }\n        }],\n        \"filter\": \"Walden\",\n        \"tags\": [],\n        \"comments\": {\n            \"data\": [{\n                \"created_time\": \"1279332030\",\n                \"text\": \"Love the sign here\",\n                \"from\": {\n                    \"username\": \"mikeyk\",\n                    \"full_name\": \"Mikey Krieger\",\n                    \"id\": \"4\",\n                    \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_1242695_75sq_1293915800.jpg\"\n                },\n                \"id\": \"8\"\n            }],\n            \"count\": 2\n        },\n        \"caption\": null,\n        \"likes\": {\n            \"count\": 1,\n            \"data\": [{\n                \"username\": \"mikeyk\",\n                \"full_name\": \"Mikeyk\",\n                \"id\": \"4\",\n                \"profile_picture\": \"...\"\n            }]\n        },\n        \"link\": \"http://instagr.am/p/D/\",\n        \"user\": {\n            \"username\": \"kevin\",\n            \"full_name\": \"Kevin S\",\n            \"profile_picture\": \"...\",\n            \"bio\": \"...\",\n            \"website\": \"...\",\n            \"id\": \"3\"\n        },\n        \"created_time\": \"1279340983\",\n        \"images\": {\n            \"low_resolution\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2010/07/16/4de37e03aa4b4372843a7eb33fa41cad_6.jpg\",\n                \"width\": 306,\n                \"height\": 306\n            },\n            \"thumbnail\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2010/07/16/4de37e03aa4b4372843a7eb33fa41cad_5.jpg\",\n                \"width\": 150,\n                \"height\": 150\n            },\n            \"standard_resolution\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2010/07/16/4de37e03aa4b4372843a7eb33fa41cad_7.jpg\",\n                \"width\": 612,\n                \"height\": 612\n            }\n        },\n        \"id\": \"3\",\n        \"location\": null\n    }\n}",
											"schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"users_in_photo\": {\n          \"type\": \"array\",\n          \"required\": false,\n          \"items\": [{\n            \"properties\": {\n              \"user\": {\n                \"properties\": {\n                  \"username\": {\n                    \"type\": \"string\"\n                  },\n                  \"full_name\": {\n                    \"type\": \"string\"\n                  },\n                  \"id\": {\n                    \"type\": \"string\"\n                  },\n                  \"profile_picture\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              },\n              \"position\": {\n                \"properties\": {\n                  \"x\": {\n                    \"type\": \"number\"\n                  },\n                  \"y\": {\n                    \"type\": \"number\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            },\n            \"type\": \"object\"\n          }]\n        },\n        \"filter\": {\n          \"type\": \"string\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"required\": false,\n          \"items\": [{\n            \"type\": \"string\"\n          }]\n        },\n        \"comments\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"data\": {\n              \"type\": \"array\",\n              \"required\": false,\n              \"items\": {\n                \"properties\": {\n                  \"created_time\": {\n                    \"type\": \"string\"\n                  },\n                  \"text\": {\n                    \"type\": \"string\"\n                  },\n                  \"from\": {\n                    \"properties\": {\n                      \"username\": {\n                        \"type\": \"string\"\n                      },\n                      \"full_name\": {\n                        \"type\": \"string\"\n                      },\n                      \"id\": {\n                        \"type\": \"string\"\n                      },\n                      \"profile_picture\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"id\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            },\n            \"count\": {\n              \"type\": \"integer\"\n            }\n          }\n        },\n        \"caption\": {\n          \"type\": \"string\"\n        },\n        \"likes\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"count\": {\n              \"type\": \"integer\"\n            },\n            \"data\": {\n              \"type\": \"array\",\n              \"required\": false,\n              \"items\": [{\n                \"properties\": {\n                  \"username\": {\n                    \"type\": \"string\"\n                  },\n                  \"full_name\": {\n                    \"type\": \"string\"\n                  },\n                  \"id\": {\n                    \"type\": \"string\"\n                  },\n                  \"profile_picture\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }]\n            }\n          }\n        },\n        \"link\": {\n          \"type\": \"string\"\n        },\n        \"user\": {\n          \"properties\": {\n            \"username\": {\n              \"type\": \"string\"\n            },\n            \"full_name\": {\n              \"type\": \"string\"\n            },\n            \"profile_picture\": {\n              \"type\": \"string\"\n            },\n            \"bio\": {\n              \"type\": \"string\"\n            },\n            \"website\": {\n              \"type\": \"string\"\n            },\n            \"id\": {\n              \"type\": \"string\"\n            }\n          },\n          \"type\": \"object\"\n        },\n        \"created_time\": {\n          \"type\": \"string\"\n        },\n        \"images\": {\n          \"properties\": {\n            \"low_resolution\": {\n              \"properties\": {\n                \"url\": {\n                  \"type\": \"string\"\n                },\n                \"width\": {\n                  \"type\": \"integer\"\n                },\n                \"height\": {\n                  \"type\": \"integer\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"thumbnail\": {\n              \"properties\": {\n                \"url\": {\n                  \"type\": \"string\"\n                },\n                \"width\": {\n                  \"type\": \"integer\"\n                },\n                \"height\": {\n                  \"type\": \"integer\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"standard_resolution\": {\n              \"properties\": {\n                \"url\": {\n                  \"type\": \"string\"\n                },\n                \"width\": {\n                  \"type\": \"integer\"\n                },\n                \"height\": {\n                  \"type\": \"integer\"\n                }\n              },\n              \"type\": \"object\"\n            }\n          },\n          \"type\": \"object\"\n        },\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"location\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}"
										}
									}
								}
							},
							"protocols": [
								"HTTPS"
							],
							"securedBy": [
								"oauth_2_0",
								"clientId"
							],
							"description": "Get information about a media object. The returned type key will allow you\nto differentiate between image and video media.\nNote: if you authenticate with an OAuth Token, you will receive the\nuser_has_liked key which quickly tells you whether the current user has liked\nthis media item.\n",
							"method": "get",
							"__METADATA__": {
								"primitiveValuesMeta": {
									"protocols": {
										"calculated": true
									},
									"securedBy": {
										"calculated": true
									}
								}
							}
						}
					},
					"resources": [
						{
							"relativeUri": "/comments",
							"type": {
								"secured": {
									"scope": "comments"
								}
							},
							"securedBy": [
								"oauth_2_0",
								"clientId"
							],
							"methods": {
								"get": {
									"responses": {
										"200": {
											"code": "200",
											"body": {
												"application/json": {
													"name": "application/json",
													"schema": "mediaComment",
													"example": "{\n    \"meta\": {\n        \"code\": 200\n    },\n    \"data\": [\n        {\n            \"created_time\": \"1280780324\",\n            \"text\": \"Really amazing photo!\",\n            \"from\": {\n                \"username\": \"snoopdogg\",\n                \"profile_picture\": \"http://images.instagram.com/profiles/profile_16_75sq_1305612434.jpg\",\n                \"id\": \"1574083\",\n                \"full_name\": \"Snoop Dogg\"\n            },\n            \"id\": \"420\"\n        }\n    ]\n}",
													"schemaContent": "{\n  \"type\": \"object\",\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"meta\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"code\": {\n          \"type\": \"integer\"\n        }\n      }\n    },\n    \"data\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"created_time\": {\n            \"type\": \"string\"\n          },\n          \"text\": {\n            \"type\": \"string\"\n          },\n          \"from\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"username\": {\n                \"type\": \"string\"\n              },\n              \"profile_picture\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"string\"\n              },\n              \"full_name\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"id\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
												}
											}
										}
									},
									"protocols": [
										"HTTPS"
									],
									"securedBy": [
										"oauth_2_0",
										"clientId"
									],
									"description": "Get a full list of comments on a media.",
									"method": "get",
									"__METADATA__": {
										"primitiveValuesMeta": {
											"protocols": {
												"calculated": true
											},
											"securedBy": {
												"calculated": true
											}
										}
									}
								},
								"post": {
									"body": {
										"application/x-www-form-urlencoded": {
											"name": "application/x-www-form-urlencoded",
											"formParameters": {
												"text": {
													"name": "text",
													"displayName": "text",
													"type": "string",
													"required": true,
													"repeat": false,
													"description": "Text to post as a comment on the media as specified in {mediaId}.",
													"__METADATA__": {
														"primitiveValuesMeta": {
															"displayName": {
																"calculated": true
															},
															"type": {
																"insertedAsDefault": true
															},
															"repeat": {
																"insertedAsDefault": true
															}
														}
													}
												}
											}
										}
									},
									"protocols": [
										"HTTPS"
									],
									"securedBy": [
										"oauth_2_0",
										"clientId"
									],
									"description": "Create a comment on a media. Please email apidevelopers[at]instagram.com for access.",
									"method": "post",
									"__METADATA__": {
										"primitiveValuesMeta": {
											"protocols": {
												"calculated": true
											},
											"securedBy": {
												"calculated": true
											}
										}
									}
								}
							},
							"resources": [
								{
									"relativeUri": "/{commentId}",
									"type": {
										"secured": {
											"scope": "comments"
										}
									},
									"securedBy": [
										"oauth_2_0",
										"clientId"
									],
									"uriParameters": {
										"commentId": {
											"name": "commentId",
											"displayName": "commentId",
											"type": "integer",
											"required": true,
											"repeat": false,
											"description": "Identifier of the comment",
											"__METADATA__": {
												"primitiveValuesMeta": {
													"displayName": {
														"calculated": true
													},
													"required": {
														"insertedAsDefault": true
													},
													"repeat": {
														"insertedAsDefault": true
													}
												}
											}
										}
									},
									"methods": {
										"delete": {
											"responses": {
												"200": {
													"code": "200",
													"description": "Comment removed."
												}
											},
											"protocols": [
												"HTTPS"
											],
											"securedBy": [
												"oauth_2_0",
												"clientId"
											],
											"description": "Remove a comment either on the authenticated user's media or authored by the authenticated user.\n",
											"method": "delete",
											"__METADATA__": {
												"primitiveValuesMeta": {
													"protocols": {
														"calculated": true
													},
													"securedBy": {
														"calculated": true
													}
												}
											}
										}
									},
									"displayName": "/{commentId}",
									"__METADATA__": {
										"primitiveValuesMeta": {
											"securedBy": {
												"calculated": true
											},
											"displayName": {
												"calculated": true
											}
										}
									},
									"relativeUriPathSegments": [
										"{commentId}"
									],
									"absoluteUri": "https://api.instagram.com/{version}/media/{mediaId}/comments/{commentId}",
									"completeRelativeUri": "/media/{mediaId}/comments/{commentId}",
									"parentUri": "/media/{mediaId}/comments"
								}
							],
							"displayName": "/comments",
							"__METADATA__": {
								"primitiveValuesMeta": {
									"securedBy": {
										"calculated": true
									},
									"displayName": {
										"calculated": true
									}
								}
							},
							"relativeUriPathSegments": [
								"comments"
							],
							"absoluteUri": "https://api.instagram.com/{version}/media/{mediaId}/comments",
							"completeRelativeUri": "/media/{mediaId}/comments",
							"parentUri": "/media/{mediaId}"
						},
						{
							"relativeUri": "/likes",
							"type": {
								"secured": {
									"scope": "likes"
								}
							},
							"securedBy": [
								"oauth_2_0",
								"clientId"
							],
							"methods": {
								"get": {
									"responses": {
										"200": {
											"code": "200",
											"body": {
												"application/json": {
													"name": "application/json",
													"schema": "mediaLikes",
													"example": "{\n    \"data\": [{\n        \"username\": \"jack\",\n        \"first_name\": \"Jack\",\n        \"last_name\": \"Dorsey\",\n        \"type\": \"user\",\n        \"id\": \"66\"\n    },\n    {\n        \"username\": \"sammyjack\",\n        \"first_name\": \"Sammy\",\n        \"last_name\": \"Jack\",\n        \"type\": \"user\",\n        \"id\": \"29648\"\n    }]\n}",
													"schemaContent": "{\n  \"type\": \"object\",\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"data\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"first_name\": {\n            \"type\": \"string\"\n          },\n          \"last_name\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
												}
											}
										}
									},
									"protocols": [
										"HTTPS"
									],
									"securedBy": [
										"oauth_2_0",
										"clientId"
									],
									"description": "Get a list of users who have liked this media.\nRequired scope: likes.\n",
									"method": "get",
									"__METADATA__": {
										"primitiveValuesMeta": {
											"protocols": {
												"calculated": true
											},
											"securedBy": {
												"calculated": true
											}
										}
									}
								},
								"post": {
									"responses": {
										"200": {
											"code": "200",
											"description": "Successfully liked a media object\n"
										}
									},
									"protocols": [
										"HTTPS"
									],
									"securedBy": [
										"oauth_2_0",
										"clientId"
									],
									"description": "Set a like on this media by the currently authenticated user.",
									"method": "post",
									"__METADATA__": {
										"primitiveValuesMeta": {
											"protocols": {
												"calculated": true
											},
											"securedBy": {
												"calculated": true
											}
										}
									}
								},
								"delete": {
									"responses": {
										"204": {
											"code": "204",
											"description": "Like removed succesfully\n"
										}
									},
									"protocols": [
										"HTTPS"
									],
									"securedBy": [
										"oauth_2_0",
										"clientId"
									],
									"description": "Remove a like on this media by the currently authenticated user.",
									"method": "delete",
									"__METADATA__": {
										"primitiveValuesMeta": {
											"protocols": {
												"calculated": true
											},
											"securedBy": {
												"calculated": true
											}
										}
									}
								}
							},
							"displayName": "/likes",
							"__METADATA__": {
								"primitiveValuesMeta": {
									"securedBy": {
										"calculated": true
									},
									"displayName": {
										"calculated": true
									}
								}
							},
							"relativeUriPathSegments": [
								"likes"
							],
							"absoluteUri": "https://api.instagram.com/{version}/media/{mediaId}/likes",
							"completeRelativeUri": "/media/{mediaId}/likes",
							"parentUri": "/media/{mediaId}"
						}
					],
					"displayName": "/{mediaId}",
					"__METADATA__": {
						"primitiveValuesMeta": {
							"securedBy": {
								"calculated": true
							},
							"displayName": {
								"calculated": true
							}
						}
					},
					"relativeUriPathSegments": [
						"{mediaId}"
					],
					"absoluteUri": "https://api.instagram.com/{version}/media/{mediaId}",
					"completeRelativeUri": "/media/{mediaId}",
					"parentUri": "/media"
				},
				{
					"relativeUri": "/search",
					"type": "mediaSearch",
					"securedBy": [
						"oauth_2_0",
						"clientId"
					],
					"methods": {
						"get": {
							"protocols": [
								"HTTPS"
							],
							"securedBy": [
								"oauth_2_0",
								"clientId"
							],
							"description": "Search for media in a given area. The default time span is set to 5 days.\nThe time span must not exceed 7 days. Defaults time stamps cover the\nlast 5 days.\n",
							"method": "get",
							"is": [
								"limitableByTime",
								"limitableByGeoPoint"
							],
							"__METADATA__": {
								"primitiveValuesMeta": {
									"protocols": {
										"calculated": true
									},
									"securedBy": {
										"calculated": true
									}
								}
							}
						}
					},
					"displayName": "/search",
					"__METADATA__": {
						"primitiveValuesMeta": {
							"securedBy": {
								"calculated": true
							},
							"displayName": {
								"calculated": true
							}
						}
					},
					"relativeUriPathSegments": [
						"search"
					],
					"absoluteUri": "https://api.instagram.com/{version}/media/search",
					"completeRelativeUri": "/media/search",
					"parentUri": "/media"
				},
				{
					"relativeUri": "/popular",
					"type": "mediaSearch",
					"securedBy": [
						"oauth_2_0",
						"clientId"
					],
					"methods": {
						"get": {
							"protocols": [
								"HTTPS"
							],
							"securedBy": [
								"oauth_2_0",
								"clientId"
							],
							"description": "Get a list of what media is most popular at the moment.\n",
							"method": "get",
							"__METADATA__": {
								"primitiveValuesMeta": {
									"protocols": {
										"calculated": true
									},
									"securedBy": {
										"calculated": true
									}
								}
							}
						}
					},
					"displayName": "/popular",
					"__METADATA__": {
						"primitiveValuesMeta": {
							"securedBy": {
								"calculated": true
							},
							"displayName": {
								"calculated": true
							}
						}
					},
					"relativeUriPathSegments": [
						"popular"
					],
					"absoluteUri": "https://api.instagram.com/{version}/media/popular",
					"completeRelativeUri": "/media/popular",
					"parentUri": "/media"
				}
			],
			"displayName": "/media",
			"__METADATA__": {
				"primitiveValuesMeta": {
					"securedBy": {
						"calculated": true
					},
					"displayName": {
						"calculated": true
					}
				}
			},
			"relativeUriPathSegments": [
				"media"
			],
			"absoluteUri": "https://api.instagram.com/{version}/media",
			"completeRelativeUri": "/media",
			"parentUri": ""
		},
		{
			"relativeUri": "/tags",
			"securedBy": [
				"oauth_2_0",
				"clientId"
			],
			"resources": [
				{
					"relativeUri": "/{tagName}",
					"type": "base",
					"securedBy": [
						"oauth_2_0",
						"clientId"
					],
					"uriParameters": {
						"tagName": {
							"name": "tagName",
							"displayName": "tagName",
							"type": "string",
							"required": true,
							"repeat": false,
							"description": "Name of tag.",
							"__METADATA__": {
								"primitiveValuesMeta": {
									"displayName": {
										"calculated": true
									},
									"type": {
										"insertedAsDefault": true
									},
									"required": {
										"insertedAsDefault": true
									},
									"repeat": {
										"insertedAsDefault": true
									}
								}
							}
						}
					},
					"methods": {
						"get": {
							"responses": {
								"200": {
									"code": "200",
									"body": {
										"application/json": {
											"name": "application/json",
											"schema": "tag",
											"example": "{\n    \"data\": {\n        \"media_count\": 472,\n        \"name\": \"nofilter\"\n    }\n}",
											"schemaContent": "{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n    \t\"data\": {\n    \t\t\"properties\": {\n    \t\t\t\"media_count\": {\n    \t\t\t\t\"type\": \"integer\"\n    \t\t\t},\n    \t\t\t\"name\": {\n    \t\t\t\t\"type\": \"string\"\n    \t\t\t}\n    \t\t},\n    \t\t\"type\": \"object\"\n    \t}\n    }\n}    "
										}
									}
								}
							},
							"protocols": [
								"HTTPS"
							],
							"securedBy": [
								"oauth_2_0",
								"clientId"
							],
							"description": "Get information about a tag object.",
							"method": "get",
							"__METADATA__": {
								"primitiveValuesMeta": {
									"protocols": {
										"calculated": true
									},
									"securedBy": {
										"calculated": true
									}
								}
							}
						}
					},
					"resources": [
						{
							"relativeUri": "/media/recent",
							"type": "base",
							"securedBy": [
								"oauth_2_0",
								"clientId"
							],
							"methods": {
								"get": {
									"responses": {
										"200": {
											"code": "200",
											"body": {
												"application/json": {
													"name": "application/json",
													"schema": "tagsRecentMedia",
													"example": "{\n    \"data\": [{\n        \"type\": \"image\",\n        \"users_in_photo\": [],\n        \"filter\": \"Earlybird\",\n        \"tags\": [\"snow\"],\n        \"comments\": {\n            \"data\": [{\n                \"created_time\": \"1296703540\",\n                \"text\": \"Snow\",\n                \"from\": {\n                    \"username\": \"emohatch\",\n                    \"username\": \"Dave\",\n                    \"id\": \"1242695\"\n                },\n                \"id\": \"26589964\"\n            },\n            {\n                \"created_time\": \"1296707889\",\n                \"text\": \"#snow\",\n                \"from\": {\n                    \"username\": \"emohatch\",\n                    \"username\": \"Emo Hatch\",\n                    \"id\": \"1242695\"\n                },\n                \"id\": \"26609649\"\n            }],\n            \"count\": 3\n        },\n        \"caption\": {\n            \"created_time\": \"1296703540\",\n            \"text\": \"#Snow\",\n            \"from\": {\n                \"username\": \"emohatch\",\n                \"id\": \"1242695\"\n            },\n            \"id\": \"26589964\"\n        },\n        \"likes\": {\n            \"count\": 1,\n            \"data\": [{\n                \"username\": \"mikeyk\",\n                \"full_name\": \"Mike Krieger\",\n                \"id\": \"4\",\n                \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_1242695_75sq_1293915800.jpg\"\n            }]\n        },        \n        \"link\": \"http://instagr.am/p/BWl6P/\",\n        \"user\": {\n            \"username\": \"emohatch\",\n            \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_1242695_75sq_1293915800.jpg\",\n            \"id\": \"1242695\",\n            \"full_name\": \"Dave\"\n        },\n        \"created_time\": \"1296703536\",\n        \"images\": {\n            \"low_resolution\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2011/02/02/f9443f3443484c40b4792fa7c76214d5_6.jpg\",\n                \"width\": 306,\n                \"height\": 306\n            },\n            \"thumbnail\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2011/02/02/f9443f3443484c40b4792fa7c76214d5_5.jpg\",\n                \"width\": 150,\n                \"height\": 150\n            },\n            \"standard_resolution\": {\n                \"url\": \"http://distillery.s3.amazonaws.com/media/2011/02/02/f9443f3443484c40b4792fa7c76214d5_7.jpg\",\n                \"width\": 612,\n                \"height\": 612\n            }\n        },\n        \"id\": \"22699663\",\n        \"location\": null\n    }\n    ]\n}",
													"schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"data\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"users_in_photo\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n              ]\n            } ,\n            \"filter\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"tags\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            } ,\n            \"comments\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"data\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"object\" ,\n                      \"properties\" : {\n                        \"created_time\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"text\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"from\" : {\n                          \"type\" : \"object\" ,\n                          \"required\" : false ,\n                          \"properties\" : {\n                            \"username\" : {\n                              \"type\" : \"array\" ,\n                              \"required\" : false ,\n                              \"items\" : [\n                                {\n                                  \"type\" : \"string\"\n                                }\n                              ]\n                            } ,\n                            \"id\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            }\n                          }\n                        } ,\n                        \"id\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        }\n                      }\n                    }\n                  ]\n                } ,\n                \"count\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"caption\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"created_time\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"text\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"from\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"username\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"likes\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"count\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"data\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"object\" ,\n                      \"properties\" : {\n                        \"username\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"full_name\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"id\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"profile_picture\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        }\n                      }\n                    }\n                  ]\n                }\n              }\n            } ,\n            \"link\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"user\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"username\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"profile_picture\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"full_name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"created_time\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"images\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"low_resolution\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"url\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"width\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"height\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"thumbnail\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"url\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"width\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"height\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"standard_resolution\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"url\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"width\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"height\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"location\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
												}
											}
										}
									},
									"protocols": [
										"HTTPS"
									],
									"securedBy": [
										"oauth_2_0",
										"clientId"
									],
									"description": "Get a list of recently tagged media. Note that this media is ordered by when the media was tagged\nwith this tag, rather than the order it was posted. Use the max_tag_id and min_tag_id parameters\nin the pagination response to paginate through these objects.\n",
									"method": "get",
									"is": [
										"limitableById"
									],
									"__METADATA__": {
										"primitiveValuesMeta": {
											"protocols": {
												"calculated": true
											},
											"securedBy": {
												"calculated": true
											}
										}
									}
								}
							},
							"displayName": "/media/recent",
							"__METADATA__": {
								"primitiveValuesMeta": {
									"securedBy": {
										"calculated": true
									},
									"displayName": {
										"calculated": true
									}
								}
							},
							"relativeUriPathSegments": [
								"media",
								"recent"
							],
							"absoluteUri": "https://api.instagram.com/{version}/tags/{tagName}/media/recent",
							"completeRelativeUri": "/tags/{tagName}/media/recent",
							"parentUri": "/tags/{tagName}"
						}
					],
					"displayName": "/{tagName}",
					"__METADATA__": {
						"primitiveValuesMeta": {
							"securedBy": {
								"calculated": true
							},
							"displayName": {
								"calculated": true
							}
						}
					},
					"relativeUriPathSegments": [
						"{tagName}"
					],
					"absoluteUri": "https://api.instagram.com/{version}/tags/{tagName}",
					"completeRelativeUri": "/tags/{tagName}",
					"parentUri": "/tags"
				},
				{
					"relativeUri": "/search",
					"type": "base",
					"securedBy": [
						"oauth_2_0",
						"clientId"
					],
					"methods": {
						"get": {
							"responses": {
								"200": {
									"code": "200",
									"body": {
										"application/json": {
											"name": "application/json",
											"schema": "tagsSearch",
											"example": "{\n  \"data\": [\n        {\n            \"media_count\": 43590,\n            \"name\": \"snowy\"\n        },\n        {\n            \"media_count\": 3264,\n            \"name\": \"snowyday\"\n        },\n        {\n            \"media_count\": 1880,\n            \"name\": \"snowymountains\"\n        },\n        {\n            \"media_count\": 1164,\n            \"name\": \"snowydays\"\n        },\n        {\n            \"media_count\": 776,\n            \"name\": \"snowyowl\"\n        },\n        {\n            \"media_count\": 680,\n            \"name\": \"snowynight\"\n        },\n        {\n            \"media_count\": 568,\n            \"name\": \"snowylebanon\"\n        },\n        {\n            \"media_count\": 522,\n            \"name\": \"snowymountain\"\n        },\n        {\n            \"media_count\": 490,\n            \"name\": \"snowytrees\"\n        },\n        {\n            \"media_count\": 260,\n            \"name\": \"snowynights\"\n        },\n        {\n            \"media_count\": 253,\n            \"name\": \"snowyegret\"\n        },\n        {\n            \"media_count\": 223,\n            \"name\": \"snowytree\"\n        },\n        {\n            \"media_count\": 214,\n            \"name\": \"snowymorning\"\n        },\n        {\n            \"media_count\": 212,\n            \"name\": \"snowyweather\"\n        },\n        {\n            \"media_count\": 161,\n            \"name\": \"snowyoursupport\"\n        },\n        {\n            \"media_count\": 148,\n            \"name\": \"snowyrange\"\n        },\n        {\n            \"media_count\": 136,\n            \"name\": \"snowynui3z\"\n        },\n        {\n            \"media_count\": 128,\n            \"name\": \"snowypeaks\"\n        },\n        {\n            \"media_count\": 124,\n            \"name\": \"snowy_dog\"\n        },\n        {\n            \"media_count\": 120,\n            \"name\": \"snowyroad\"\n        },\n        {\n            \"media_count\": 108,\n            \"name\": \"snowyoghurt\"\n        },\n        {\n            \"media_count\": 107,\n            \"name\": \"snowyriver\"\n        }\n    ],\n    \"meta\": {\n        \"code\": 200\n    }\n}",
											"schemaContent": "{\n  \"type\": \"object\",\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n  \t\"meta\": {\n  \t\t\"required\": false\n  \t},\n    \"data\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"media_count\": {\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
										}
									}
								}
							},
							"protocols": [
								"HTTPS"
							],
							"securedBy": [
								"oauth_2_0",
								"clientId"
							],
							"queryParameters": {
								"q": {
									"name": "q",
									"displayName": "q",
									"type": "string",
									"required": true,
									"example": "nofilter",
									"repeat": false,
									"description": "A valid tag name without a leading #.\n",
									"__METADATA__": {
										"primitiveValuesMeta": {
											"displayName": {
												"calculated": true
											},
											"type": {
												"insertedAsDefault": true
											},
											"repeat": {
												"insertedAsDefault": true
											}
										}
									}
								}
							},
							"description": "Search for tags by name. Results are ordered first as an exact match, then by popularity.\nShort tags will be treated as exact matches.\n",
							"method": "get",
							"__METADATA__": {
								"primitiveValuesMeta": {
									"protocols": {
										"calculated": true
									},
									"securedBy": {
										"calculated": true
									}
								}
							}
						}
					},
					"displayName": "/search",
					"__METADATA__": {
						"primitiveValuesMeta": {
							"securedBy": {
								"calculated": true
							},
							"displayName": {
								"calculated": true
							}
						}
					},
					"relativeUriPathSegments": [
						"search"
					],
					"absoluteUri": "https://api.instagram.com/{version}/tags/search",
					"completeRelativeUri": "/tags/search",
					"parentUri": "/tags"
				}
			],
			"displayName": "/tags",
			"__METADATA__": {
				"primitiveValuesMeta": {
					"securedBy": {
						"calculated": true
					},
					"displayName": {
						"calculated": true
					}
				}
			},
			"relativeUriPathSegments": [
				"tags"
			],
			"absoluteUri": "https://api.instagram.com/{version}/tags",
			"completeRelativeUri": "/tags",
			"parentUri": ""
		},
		{
			"relativeUri": "/users",
			"securedBy": [
				"oauth_2_0",
				"clientId"
			],
			"resources": [
				{
					"relativeUri": "/{userId}",
					"type": "base",
					"securedBy": [
						"oauth_2_0",
						"clientId"
					],
					"uriParameters": {
						"userId": {
							"name": "userId",
							"displayName": "userId",
							"type": "string",
							"required": true,
							"repeat": false,
							"__METADATA__": {
								"calculated": true,
								"primitiveValuesMeta": {
									"displayName": {
										"calculated": true
									},
									"type": {
										"insertedAsDefault": true
									},
									"required": {
										"insertedAsDefault": true
									},
									"repeat": {
										"insertedAsDefault": true
									}
								}
							}
						}
					},
					"methods": {
						"get": {
							"responses": {
								"200": {
									"code": "200",
									"body": {
										"application/json": {
											"name": "application/json",
											"schema": "user",
											"example": "{\n    \"data\": {\n        \"id\": \"1574083\",\n        \"username\": \"snoopdogg\",\n        \"full_name\": \"Snoop Dogg\",\n        \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_1574083_75sq_1295469061.jpg\",\n        \"bio\": \"This is my bio\",\n        \"website\": \"http://snoopdogg.com\",\n        \"counts\": {\n            \"media\": 1320,\n            \"follows\": 420,\n            \"followed_by\": 3410\n        }\n    }\n}",
											"schemaContent": "{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"data\": {\n            \"properties\": {\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"type\": \"string\"\n                },\n                \"full_name\": {\n                    \"type\": \"string\"\n                },\n                \"profile_picture\": {\n                    \"type\": \"string\"\n                },\n                \"bio\": {\n                    \"type\": \"string\"\n                },\n                \"website\": {\n                    \"type\": \"string\"\n                },\n                \"counts\": {\n                    \"properties\": {\n                        \"media\": {\n                            \"type\": \"integer\"\n                        },\n                        \"follows\": {\n                            \"type\": \"integer\"\n                        },\n                        \"followed_by\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    \"type\": \"object\"\n                }\n            },\n            \"type\": \"object\"\n        }\n    }\n}"
										}
									}
								}
							},
							"protocols": [
								"HTTPS"
							],
							"securedBy": [
								"oauth_2_0",
								"clientId"
							],
							"description": "Get basic information about a user.",
							"method": "get",
							"__METADATA__": {
								"primitiveValuesMeta": {
									"protocols": {
										"calculated": true
									},
									"securedBy": {
										"calculated": true
									}
								}
							}
						}
					},
					"resources": [
						{
							"relativeUri": "/follows",
							"type": "usersListing",
							"securedBy": [
								"oauth_2_0",
								"clientId"
							],
							"methods": {
								"get": {
									"protocols": [
										"HTTPS"
									],
									"securedBy": [
										"oauth_2_0",
										"clientId"
									],
									"description": "Get the list of users this user follows.",
									"method": "get",
									"__METADATA__": {
										"primitiveValuesMeta": {
											"protocols": {
												"calculated": true
											},
											"securedBy": {
												"calculated": true
											}
										}
									}
								}
							},
							"displayName": "/follows",
							"__METADATA__": {
								"primitiveValuesMeta": {
									"securedBy": {
										"calculated": true
									},
									"displayName": {
										"calculated": true
									}
								}
							},
							"relativeUriPathSegments": [
								"follows"
							],
							"absoluteUri": "https://api.instagram.com/{version}/users/{userId}/follows",
							"completeRelativeUri": "/users/{userId}/follows",
							"parentUri": "/users/{userId}"
						},
						{
							"relativeUri": "/followed-by",
							"type": "usersListing",
							"securedBy": [
								"oauth_2_0",
								"clientId"
							],
							"methods": {
								"get": {
									"protocols": [
										"HTTPS"
									],
									"securedBy": [
										"oauth_2_0",
										"clientId"
									],
									"description": "Get the list of users this user is followed by.",
									"method": "get",
									"__METADATA__": {
										"primitiveValuesMeta": {
											"protocols": {
												"calculated": true
											},
											"securedBy": {
												"calculated": true
											}
										}
									}
								}
							},
							"displayName": "/followed-by",
							"__METADATA__": {
								"primitiveValuesMeta": {
									"securedBy": {
										"calculated": true
									},
									"displayName": {
										"calculated": true
									}
								}
							},
							"relativeUriPathSegments": [
								"followed-by"
							],
							"absoluteUri": "https://api.instagram.com/{version}/users/{userId}/followed-by",
							"completeRelativeUri": "/users/{userId}/followed-by",
							"parentUri": "/users/{userId}"
						},
						{
							"relativeUri": "/media/recent",
							"type": "feedsListing",
							"securedBy": [
								"oauth_2_0",
								"clientId"
							],
							"methods": {
								"get": {
									"protocols": [
										"HTTPS"
									],
									"securedBy": [
										"oauth_2_0",
										"clientId"
									],
									"description": "See the authenticated user's feed. May return a mix of both image and\nvideo types.\n",
									"method": "get",
									"is": [
										"limitableById",
										"limitableByTime",
										"limitable"
									],
									"__METADATA__": {
										"primitiveValuesMeta": {
											"protocols": {
												"calculated": true
											},
											"securedBy": {
												"calculated": true
											}
										}
									}
								}
							},
							"displayName": "/media/recent",
							"__METADATA__": {
								"primitiveValuesMeta": {
									"securedBy": {
										"calculated": true
									},
									"displayName": {
										"calculated": true
									}
								}
							},
							"relativeUriPathSegments": [
								"media",
								"recent"
							],
							"absoluteUri": "https://api.instagram.com/{version}/users/{userId}/media/recent",
							"completeRelativeUri": "/users/{userId}/media/recent",
							"parentUri": "/users/{userId}"
						},
						{
							"relativeUri": "/relationship",
							"type": {
								"secured": {
									"scope": "comments"
								}
							},
							"securedBy": [
								"oauth_2_0",
								"clientId"
							],
							"methods": {
								"get": {
									"responses": {
										"200": {
											"code": "200",
											"body": {
												"application/json": {
													"name": "application/json",
													"schema": "relationships",
													"example": "{\n    \"meta\": {\n        \"code\": 200\n    }, \n    \"data\": {\n        \"outgoing_status\": \"none\", \n        \"incoming_status\": \"requested_by\"\n    }\n}",
													"schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"meta\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"code\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"data\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"outgoing_status\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"incoming_status\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
												}
											}
										}
									},
									"protocols": [
										"HTTPS"
									],
									"securedBy": [
										"oauth_2_0",
										"clientId"
									],
									"description": "Get information about a relationship to another user.",
									"method": "get",
									"__METADATA__": {
										"primitiveValuesMeta": {
											"protocols": {
												"calculated": true
											},
											"securedBy": {
												"calculated": true
											}
										}
									}
								},
								"post": {
									"responses": {
										"200": {
											"code": "200",
											"body": {
												"application/json": {
													"name": "application/json",
													"schema": "relationships",
													"example": "{\n  \"meta\" : {\n    \"code\" : 200\n  } ,\n  \"data\" : {\n    \"outgoing_status\" : \"none\" ,\n    \"incoming_status\" : \"requested_by\"\n  }\n}",
													"schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"meta\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"code\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"data\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"outgoing_status\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"incoming_status\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
												}
											}
										}
									},
									"body": {
										"application/x-www-form-urlencoded": {
											"name": "application/x-www-form-urlencoded",
											"formParameters": {
												"action": {
													"name": "action",
													"displayName": "action",
													"type": "string",
													"required": false,
													"repeat": false,
													"description": "One of follow/unfollow/block/unblock/approve/deny.",
													"enum": [
														"follow",
														"unfollow",
														"block",
														"unblock",
														"approve",
														"deny"
													],
													"__METADATA__": {
														"primitiveValuesMeta": {
															"displayName": {
																"calculated": true
															},
															"type": {
																"insertedAsDefault": true
															},
															"required": {
																"insertedAsDefault": true
															},
															"repeat": {
																"insertedAsDefault": true
															}
														}
													}
												}
											}
										}
									},
									"protocols": [
										"HTTPS"
									],
									"securedBy": [
										"oauth_2_0",
										"clientId"
									],
									"description": "Modify the relationship between the current user and the target user.",
									"method": "post",
									"__METADATA__": {
										"primitiveValuesMeta": {
											"protocols": {
												"calculated": true
											},
											"securedBy": {
												"calculated": true
											}
										}
									}
								}
							},
							"displayName": "/relationship",
							"__METADATA__": {
								"primitiveValuesMeta": {
									"securedBy": {
										"calculated": true
									},
									"displayName": {
										"calculated": true
									}
								}
							},
							"relativeUriPathSegments": [
								"relationship"
							],
							"absoluteUri": "https://api.instagram.com/{version}/users/{userId}/relationship",
							"completeRelativeUri": "/users/{userId}/relationship",
							"parentUri": "/users/{userId}"
						}
					],
					"displayName": "/{userId}",
					"__METADATA__": {
						"primitiveValuesMeta": {
							"securedBy": {
								"calculated": true
							},
							"displayName": {
								"calculated": true
							}
						}
					},
					"relativeUriPathSegments": [
						"{userId}"
					],
					"absoluteUri": "https://api.instagram.com/{version}/users/{userId}",
					"completeRelativeUri": "/users/{userId}",
					"parentUri": "/users"
				},
				{
					"relativeUri": "/search",
					"type": "usersListing",
					"securedBy": [
						"oauth_2_0",
						"clientId"
					],
					"methods": {
						"get": {
							"protocols": [
								"HTTPS"
							],
							"securedBy": [
								"oauth_2_0",
								"clientId"
							],
							"queryParameters": {
								"q": {
									"name": "q",
									"displayName": "q",
									"type": "string",
									"required": true,
									"example": "some query",
									"repeat": false,
									"description": "A query string.",
									"__METADATA__": {
										"primitiveValuesMeta": {
											"displayName": {
												"calculated": true
											},
											"type": {
												"insertedAsDefault": true
											},
											"repeat": {
												"insertedAsDefault": true
											}
										}
									}
								},
								"count": {
									"name": "count",
									"displayName": "count",
									"type": "integer",
									"required": false,
									"example": "10",
									"repeat": false,
									"description": "Number of users to return.",
									"__METADATA__": {
										"primitiveValuesMeta": {
											"displayName": {
												"calculated": true
											},
											"required": {
												"insertedAsDefault": true
											},
											"repeat": {
												"insertedAsDefault": true
											}
										}
									}
								}
							},
							"description": "Search for a user by name.",
							"method": "get",
							"__METADATA__": {
								"primitiveValuesMeta": {
									"protocols": {
										"calculated": true
									},
									"securedBy": {
										"calculated": true
									}
								}
							}
						}
					},
					"displayName": "/search",
					"__METADATA__": {
						"primitiveValuesMeta": {
							"securedBy": {
								"calculated": true
							},
							"displayName": {
								"calculated": true
							}
						}
					},
					"relativeUriPathSegments": [
						"search"
					],
					"absoluteUri": "https://api.instagram.com/{version}/users/search",
					"completeRelativeUri": "/users/search",
					"parentUri": "/users"
				},
				{
					"relativeUri": "/self",
					"type": {
						"secured": {
							"scope": "basic"
						}
					},
					"securedBy": [
						"oauth_2_0",
						"clientId"
					],
					"methods": {
						"get": {
							"responses": {
								"200": {
									"code": "200",
									"body": {
										"application/json": {
											"name": "application/json",
											"schema": "user",
											"example": "{\n    \"data\": {\n        \"id\": \"1574083\",\n        \"username\": \"snoopdogg\",\n        \"full_name\": \"Snoop Dogg\",\n        \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_1574083_75sq_1295469061.jpg\",\n        \"bio\": \"This is my bio\",\n        \"website\": \"http://snoopdogg.com\",\n        \"counts\": {\n            \"media\": 1320,\n            \"follows\": 420,\n            \"followed_by\": 3410\n        }\n    }\n}",
											"schemaContent": "{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"data\": {\n            \"properties\": {\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"type\": \"string\"\n                },\n                \"full_name\": {\n                    \"type\": \"string\"\n                },\n                \"profile_picture\": {\n                    \"type\": \"string\"\n                },\n                \"bio\": {\n                    \"type\": \"string\"\n                },\n                \"website\": {\n                    \"type\": \"string\"\n                },\n                \"counts\": {\n                    \"properties\": {\n                        \"media\": {\n                            \"type\": \"integer\"\n                        },\n                        \"follows\": {\n                            \"type\": \"integer\"\n                        },\n                        \"followed_by\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    \"type\": \"object\"\n                }\n            },\n            \"type\": \"object\"\n        }\n    }\n}"
										}
									}
								}
							},
							"protocols": [
								"HTTPS"
							],
							"securedBy": [
								"oauth_2_0",
								"clientId"
							],
							"description": "Retrieve the authenticated user",
							"method": "get",
							"__METADATA__": {
								"primitiveValuesMeta": {
									"protocols": {
										"calculated": true
									},
									"securedBy": {
										"calculated": true
									}
								}
							}
						}
					},
					"resources": [
						{
							"relativeUri": "/feed",
							"type": "feedsListing",
							"securedBy": [
								"oauth_2_0",
								"clientId"
							],
							"methods": {
								"get": {
									"protocols": [
										"HTTPS"
									],
									"securedBy": [
										"oauth_2_0",
										"clientId"
									],
									"description": "See the authenticated user's feed. May return a mix of both image and\nvideo types.\n",
									"method": "get",
									"is": [
										"limitableById",
										"limitable"
									],
									"__METADATA__": {
										"primitiveValuesMeta": {
											"protocols": {
												"calculated": true
											},
											"securedBy": {
												"calculated": true
											}
										}
									}
								}
							},
							"displayName": "/feed",
							"__METADATA__": {
								"primitiveValuesMeta": {
									"securedBy": {
										"calculated": true
									},
									"displayName": {
										"calculated": true
									}
								}
							},
							"relativeUriPathSegments": [
								"feed"
							],
							"absoluteUri": "https://api.instagram.com/{version}/users/self/feed",
							"completeRelativeUri": "/users/self/feed",
							"parentUri": "/users/self"
						},
						{
							"relativeUri": "/requested-by",
							"type": "usersListing",
							"securedBy": [
								{
									"oauth_2_0": {
										"scopes": [
											"relationships"
										]
									}
								}
							],
							"methods": {
								"get": {
									"protocols": [
										"HTTPS"
									],
									"securedBy": [
										{
											"oauth_2_0": {
												"scopes": [
													"relationships"
												]
											}
										}
									],
									"description": "List the users who have requested this user's permission to follow.",
									"method": "get",
									"__METADATA__": {
										"primitiveValuesMeta": {
											"protocols": {
												"calculated": true
											},
											"securedBy": {
												"calculated": true
											}
										}
									}
								}
							},
							"displayName": "/requested-by",
							"__METADATA__": {
								"primitiveValuesMeta": {
									"displayName": {
										"calculated": true
									}
								}
							},
							"relativeUriPathSegments": [
								"requested-by"
							],
							"absoluteUri": "https://api.instagram.com/{version}/users/self/requested-by",
							"completeRelativeUri": "/users/self/requested-by",
							"parentUri": "/users/self"
						},
						{
							"relativeUri": "/media/liked",
							"type": "feedsListing",
							"securedBy": [
								"oauth_2_0",
								"clientId"
							],
							"methods": {
								"get": {
									"protocols": [
										"HTTPS"
									],
									"securedBy": [
										"oauth_2_0",
										"clientId"
									],
									"queryParameters": {
										"max_like_id": {
											"name": "max_like_id",
											"displayName": "max_like_id",
											"type": "integer",
											"required": false,
											"example": "100",
											"repeat": false,
											"description": "Return media liked before this id.",
											"__METADATA__": {
												"primitiveValuesMeta": {
													"displayName": {
														"calculated": true
													},
													"required": {
														"insertedAsDefault": true
													},
													"repeat": {
														"insertedAsDefault": true
													}
												}
											}
										}
									},
									"description": "See the authenticated user's list of media they've liked. May return a mix\nof both image and video types.\nNote: This list is ordered by the order in which the user liked the media.\nPrivate media is returned as long as the authenticated user has permission\nto view that media. Liked media lists are only available for the currently\nauthenticated user.\n",
									"method": "get",
									"is": [
										"limitable"
									],
									"__METADATA__": {
										"primitiveValuesMeta": {
											"protocols": {
												"calculated": true
											},
											"securedBy": {
												"calculated": true
											}
										}
									}
								}
							},
							"displayName": "/media/liked",
							"__METADATA__": {
								"primitiveValuesMeta": {
									"securedBy": {
										"calculated": true
									},
									"displayName": {
										"calculated": true
									}
								}
							},
							"relativeUriPathSegments": [
								"media",
								"liked"
							],
							"absoluteUri": "https://api.instagram.com/{version}/users/self/media/liked",
							"completeRelativeUri": "/users/self/media/liked",
							"parentUri": "/users/self"
						}
					],
					"displayName": "/self",
					"__METADATA__": {
						"primitiveValuesMeta": {
							"securedBy": {
								"calculated": true
							},
							"displayName": {
								"calculated": true
							}
						}
					},
					"relativeUriPathSegments": [
						"self"
					],
					"absoluteUri": "https://api.instagram.com/{version}/users/self",
					"completeRelativeUri": "/users/self",
					"parentUri": "/users"
				}
			],
			"displayName": "/users",
			"__METADATA__": {
				"primitiveValuesMeta": {
					"securedBy": {
						"calculated": true
					},
					"displayName": {
						"calculated": true
					}
				}
			},
			"relativeUriPathSegments": [
				"users"
			],
			"absoluteUri": "https://api.instagram.com/{version}/users",
			"completeRelativeUri": "/users",
			"parentUri": ""
		},
		{
			"relativeUri": "/locations",
			"securedBy": [
				"oauth_2_0",
				"clientId"
			],
			"resources": [
				{
					"relativeUri": "/{locId}",
					"type": "base",
					"securedBy": [
						"oauth_2_0",
						"clientId"
					],
					"uriParameters": {
						"locId": {
							"name": "locId",
							"displayName": "locId",
							"type": "integer",
							"required": true,
							"repeat": false,
							"__METADATA__": {
								"primitiveValuesMeta": {
									"displayName": {
										"calculated": true
									},
									"required": {
										"insertedAsDefault": true
									},
									"repeat": {
										"insertedAsDefault": true
									}
								}
							}
						}
					},
					"methods": {
						"get": {
							"responses": {
								"200": {
									"code": "200",
									"body": {
										"application/json": {
											"name": "application/json",
											"schema": "location",
											"example": "{\n    \"data\": {\n        \"id\": \"1\",\n        \"name\": \"Dogpatch Labs\",\n        \"latitude\": 37.782,\n        \"longitude\": -122.387\n    }\n}",
											"schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"latitude\": {\n          \"type\": \"number\"\n        },\n        \"longtitude\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}"
										}
									}
								}
							},
							"protocols": [
								"HTTPS"
							],
							"securedBy": [
								"oauth_2_0",
								"clientId"
							],
							"description": "Get information about a location.",
							"method": "get",
							"__METADATA__": {
								"primitiveValuesMeta": {
									"protocols": {
										"calculated": true
									},
									"securedBy": {
										"calculated": true
									}
								}
							}
						}
					},
					"resources": [
						{
							"relativeUri": "/media/recent",
							"type": "feedsListing",
							"securedBy": [
								"oauth_2_0",
								"clientId"
							],
							"methods": {
								"get": {
									"protocols": [
										"HTTPS"
									],
									"securedBy": [
										"oauth_2_0",
										"clientId"
									],
									"description": "Get a list of recent media objects from a given location. May return a\nmix of both image and video types.\n",
									"method": "get",
									"is": [
										"limitableById",
										"limitableByTime"
									],
									"__METADATA__": {
										"primitiveValuesMeta": {
											"protocols": {
												"calculated": true
											},
											"securedBy": {
												"calculated": true
											}
										}
									}
								}
							},
							"displayName": "/media/recent",
							"__METADATA__": {
								"primitiveValuesMeta": {
									"securedBy": {
										"calculated": true
									},
									"displayName": {
										"calculated": true
									}
								}
							},
							"relativeUriPathSegments": [
								"media",
								"recent"
							],
							"absoluteUri": "https://api.instagram.com/{version}/locations/{locId}/media/recent",
							"completeRelativeUri": "/locations/{locId}/media/recent",
							"parentUri": "/locations/{locId}"
						}
					],
					"displayName": "/{locId}",
					"__METADATA__": {
						"primitiveValuesMeta": {
							"securedBy": {
								"calculated": true
							},
							"displayName": {
								"calculated": true
							}
						}
					},
					"relativeUriPathSegments": [
						"{locId}"
					],
					"absoluteUri": "https://api.instagram.com/{version}/locations/{locId}",
					"completeRelativeUri": "/locations/{locId}",
					"parentUri": "/locations"
				},
				{
					"relativeUri": "/search",
					"type": "base",
					"securedBy": [
						"oauth_2_0",
						"clientId"
					],
					"methods": {
						"get": {
							"responses": {
								"200": {
									"code": "200",
									"body": {
										"application/json": {
											"name": "application/json",
											"schema": "locations",
											"example": "{\n  \"meta\": {\n    \"code\": 200\n  },\n  \"data\": [\n    {\n      \"latitude\": 48.850059509,\n      \"id\": \"125983371\",\n      \"longitude\": 2.294613838,\n      \"name\": \"cairo universty, ElSheikh Zaid branch\"\n    },\n    {\n      \"latitude\": 48.850191,\n      \"id\": \"46295095\",\n      \"longitude\": 2.294195,\n      \"name\": \"82 Boulevard De Grenelle\"\n    },\n    {\n      \"latitude\": 48.850232,\n      \"id\": \"17463171\",\n      \"longitude\": 2.294276,\n      \"name\": \"Monan chaussure\"\n    },\n    {\n      \"latitude\": 48.849993048,\n      \"id\": \"58664053\",\n      \"longitude\": 2.294816312,\n      \"name\": \"Rue Juge\"\n    },\n    {\n      \"latitude\": 48.850235602,\n      \"id\": \"3277432\",\n      \"longitude\": 2.294731778,\n      \"name\": \"Pizza Di Napoli\"\n    },\n    {\n      \"latitude\": 48.85030795,\n      \"id\": \"3632655\",\n      \"longitude\": 2.294114341,\n      \"name\": \"Marche Grenelle\"\n    },\n    {\n      \"latitude\": 48.850311575,\n      \"id\": \"47202559\",\n      \"longitude\": 2.294123981,\n      \"name\": \"London Styl'\"\n    },\n    {\n      \"latitude\": 48.84975,\n      \"id\": \"16095374\",\n      \"longitude\": 2.294726,\n      \"name\": \"Sami Coiffure 2000\"\n    }\n  ]\n}",
											"schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"meta\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"code\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"data\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"latitude\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"longitude\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
										}
									}
								}
							},
							"protocols": [
								"HTTPS"
							],
							"securedBy": [
								"oauth_2_0",
								"clientId"
							],
							"queryParameters": {
								"foursquare_v2_id": {
									"name": "foursquare_v2_id",
									"displayName": "foursquare_v2_id",
									"type": "string",
									"required": false,
									"repeat": false,
									"description": "Returns a location mapped off of a foursquare v2 api location id. If\nused, you are not required to use lat and lng.\n",
									"__METADATA__": {
										"primitiveValuesMeta": {
											"displayName": {
												"calculated": true
											},
											"type": {
												"insertedAsDefault": true
											},
											"required": {
												"insertedAsDefault": true
											},
											"repeat": {
												"insertedAsDefault": true
											}
										}
									}
								},
								"foursquare_id": {
									"name": "foursquare_id",
									"displayName": "foursquare_id",
									"type": "string",
									"required": false,
									"repeat": false,
									"description": "Returns a location mapped off of a foursquare v1 api location id. If used,\nyou are not required to use lat and lng. Note that this method is deprecated;\nyou should use the new foursquare IDs with V2 of their API.\n",
									"__METADATA__": {
										"primitiveValuesMeta": {
											"displayName": {
												"calculated": true
											},
											"type": {
												"insertedAsDefault": true
											},
											"required": {
												"insertedAsDefault": true
											},
											"repeat": {
												"insertedAsDefault": true
											}
										}
									}
								}
							},
							"description": "Search for a location by geographic coordinate.",
							"method": "get",
							"is": [
								"limitableByGeoPoint"
							],
							"__METADATA__": {
								"primitiveValuesMeta": {
									"protocols": {
										"calculated": true
									},
									"securedBy": {
										"calculated": true
									}
								}
							}
						}
					},
					"displayName": "/search",
					"__METADATA__": {
						"primitiveValuesMeta": {
							"securedBy": {
								"calculated": true
							},
							"displayName": {
								"calculated": true
							}
						}
					},
					"relativeUriPathSegments": [
						"search"
					],
					"absoluteUri": "https://api.instagram.com/{version}/locations/search",
					"completeRelativeUri": "/locations/search",
					"parentUri": "/locations"
				}
			],
			"displayName": "/locations",
			"__METADATA__": {
				"primitiveValuesMeta": {
					"securedBy": {
						"calculated": true
					},
					"displayName": {
						"calculated": true
					}
				}
			},
			"relativeUriPathSegments": [
				"locations"
			],
			"absoluteUri": "https://api.instagram.com/{version}/locations",
			"completeRelativeUri": "/locations",
			"parentUri": ""
		},
		{
			"relativeUri": "/geographies/{geoId}/media/recent",
			"type": "base",
			"securedBy": [
				"oauth_2_0",
				"clientId"
			],
			"uriParameters": {
				"geoId": {
					"name": "geoId",
					"displayName": "geoId",
					"type": "string",
					"required": true,
					"repeat": false,
					"__METADATA__": {
						"calculated": true,
						"primitiveValuesMeta": {
							"displayName": {
								"calculated": true
							},
							"type": {
								"insertedAsDefault": true
							},
							"required": {
								"insertedAsDefault": true
							},
							"repeat": {
								"insertedAsDefault": true
							}
						}
					}
				}
			},
			"methods": {
				"get": {
					"responses": {
						"200": {
							"code": "200"
						}
					},
					"protocols": [
						"HTTPS"
					],
					"securedBy": [
						"oauth_2_0",
						"clientId"
					],
					"queryParameters": {
						"min_id": {
							"name": "min_id",
							"displayName": "min_id",
							"type": "integer",
							"required": false,
							"example": "0",
							"repeat": false,
							"description": "Return media before this min_id.",
							"__METADATA__": {
								"primitiveValuesMeta": {
									"displayName": {
										"calculated": true
									},
									"required": {
										"insertedAsDefault": true
									},
									"repeat": {
										"insertedAsDefault": true
									}
								}
							}
						}
					},
					"description": "Get recent media from a geography subscription that you created.\nNote: You can only access Geographies that were explicitly created by your\nOAuth client. Check the Geography Subscriptions section of the real-time\nupdates page. When you create a subscription to some geography that you\ndefine, you will be returned a unique geo-id that can be used in this\nquery. To backfill photos from the location covered by this geography,\nuse the media search endpoint.\n",
					"method": "get",
					"is": [
						"limitable"
					],
					"__METADATA__": {
						"primitiveValuesMeta": {
							"protocols": {
								"calculated": true
							},
							"securedBy": {
								"calculated": true
							}
						}
					}
				}
			},
			"displayName": "/geographies/{geoId}/media/recent",
			"__METADATA__": {
				"primitiveValuesMeta": {
					"securedBy": {
						"calculated": true
					},
					"displayName": {
						"calculated": true
					}
				}
			},
			"relativeUriPathSegments": [
				"geographies",
				"{geoId}",
				"media",
				"recent"
			],
			"absoluteUri": "https://api.instagram.com/{version}/geographies/{geoId}/media/recent",
			"completeRelativeUri": "/geographies/{geoId}/media/recent",
			"parentUri": ""
		},
		{
			"relativeUri": "/subscriptions",
			"type": "base",
			"securedBy": [
				"oauth_2_0",
				"clientId"
			],
			"methods": {
				"get": {
					"responses": {
						"200": {
							"code": "200",
							"body": {
								"application/json": {
									"name": "application/json",
									"schema": "subscriptionsGet",
									"example": "{\n  \"meta\" : {\n    \"code\" : 200\n  } ,\n  \"data\" : [\n    {\n      \"id\" : \"1\" ,\n      \"type\" : \"subscription\" ,\n      \"object\" : \"user\" ,\n      \"aspect\" : \"media\" ,\n      \"callback_url\" : \"http://your-callback.com/url/\"\n    } , {\n      \"id\" : \"2\" ,\n      \"type\" : \"subscription\" ,\n      \"object\" : \"location\" ,\n      \"object_id\" : \"2345\" ,\n      \"aspect\" : \"media\" ,\n      \"callback_url\" : \"http://your-callback.com/url/\"\n    }\n  ]\n}",
									"schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"meta\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"code\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"data\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"object\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"aspect\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"callback_url\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"object_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } , {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"object\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"object_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"aspect\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"callback_url\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
								}
							}
						}
					},
					"protocols": [
						"HTTPS"
					],
					"securedBy": [
						"oauth_2_0"
					],
					"queryParameters": {
						"client_id": {
							"name": "client_id",
							"displayName": "client_id",
							"type": "string",
							"required": true,
							"repeat": false,
							"description": "Application's client id",
							"__METADATA__": {
								"primitiveValuesMeta": {
									"displayName": {
										"calculated": true
									},
									"type": {
										"insertedAsDefault": true
									},
									"repeat": {
										"insertedAsDefault": true
									}
								}
							}
						},
						"client_secret": {
							"name": "client_secret",
							"displayName": "client_secret",
							"type": "string",
							"required": true,
							"repeat": false,
							"description": "Application's client secret",
							"__METADATA__": {
								"primitiveValuesMeta": {
									"displayName": {
										"calculated": true
									},
									"type": {
										"insertedAsDefault": true
									},
									"repeat": {
										"insertedAsDefault": true
									}
								}
							}
						}
					},
					"description": "List subscriptions",
					"method": "get",
					"__METADATA__": {
						"primitiveValuesMeta": {
							"protocols": {
								"calculated": true
							}
						}
					}
				},
				"post": {
					"responses": {
						"200": {
							"code": "200",
							"body": {
								"application/json": {
									"name": "application/json",
									"schema": "subscriptionPost",
									"example": "{\n  \"meta\" : {\n    \"code\" : 200\n  } ,\n  \"data\" : {\n    \"object\" : \"location\" ,\n    \"object_id\" : \"247423995\" ,\n    \"aspect\" : \"media\" ,\n    \"callback_url\" : \"http://my-redirect-url.my-host.com\" ,\n    \"type\" : \"subscription\" ,\n    \"id\" : \"4613492\"\n  }\n}",
									"schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"meta\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"code\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"data\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"object\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"object_id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"aspect\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"callback_url\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"type\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"lng\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"lat\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"radius\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
								}
							}
						}
					},
					"body": {
						"application/x-www-form-urlencoded": {
							"name": "application/x-www-form-urlencoded",
							"formParameters": {
								"client_id": {
									"name": "client_id",
									"displayName": "client_id",
									"type": "string",
									"required": true,
									"repeat": false,
									"description": "Application's client id",
									"__METADATA__": {
										"primitiveValuesMeta": {
											"displayName": {
												"calculated": true
											},
											"type": {
												"insertedAsDefault": true
											},
											"repeat": {
												"insertedAsDefault": true
											}
										}
									}
								},
								"client_secret": {
									"name": "client_secret",
									"displayName": "client_secret",
									"type": "string",
									"required": true,
									"repeat": false,
									"description": "Application's client secret",
									"__METADATA__": {
										"primitiveValuesMeta": {
											"displayName": {
												"calculated": true
											},
											"type": {
												"insertedAsDefault": true
											},
											"repeat": {
												"insertedAsDefault": true
											}
										}
									}
								},
								"object": {
									"name": "object",
									"displayName": "object",
									"type": "string",
									"required": false,
									"repeat": false,
									"description": "The object you'd like to subscribe to.",
									"enum": [
										"location",
										"user",
										"geography",
										"tag"
									],
									"__METADATA__": {
										"primitiveValuesMeta": {
											"displayName": {
												"calculated": true
											},
											"type": {
												"insertedAsDefault": true
											},
											"required": {
												"insertedAsDefault": true
											},
											"repeat": {
												"insertedAsDefault": true
											}
										}
									}
								},
								"object_id": {
									"name": "object_id",
									"displayName": "object_id",
									"type": "string",
									"required": false,
									"repeat": false,
									"description": "Used for user, location and tag subscriptions only. Required. In case of user and location represents 'id' of the desired object. In case of tag represents 'name' of the desired tag.",
									"__METADATA__": {
										"primitiveValuesMeta": {
											"displayName": {
												"calculated": true
											},
											"type": {
												"insertedAsDefault": true
											},
											"required": {
												"insertedAsDefault": true
											},
											"repeat": {
												"insertedAsDefault": true
											}
										}
									}
								},
								"aspect": {
									"name": "aspect",
									"displayName": "aspect",
									"type": "string",
									"required": false,
									"repeat": false,
									"description": "The aspect of the object you'd like to subscribe to. Note that we only support \"media\" at this time, but we might support other types of subscriptions in the future.\n",
									"__METADATA__": {
										"primitiveValuesMeta": {
											"displayName": {
												"calculated": true
											},
											"type": {
												"insertedAsDefault": true
											},
											"required": {
												"insertedAsDefault": true
											},
											"repeat": {
												"insertedAsDefault": true
											}
										}
									}
								},
								"callback_url": {
									"name": "callback_url",
									"displayName": "callback_url",
									"type": "string",
									"required": true,
									"repeat": false,
									"description": "When we have new updates to send your server, we do a simple POST with a payload containing updates to a URL on your server. This callback URL must support GET and POST methods.\n\nWhen you add a subscription, we will send a GET request to your callback URL to verify the existence of the URL and that want to create the subscription. When we have new data, we'll POST this data to your callback URL. We'll explain more about what this URL needs to do later on this page.\n",
									"__METADATA__": {
										"primitiveValuesMeta": {
											"displayName": {
												"calculated": true
											},
											"type": {
												"insertedAsDefault": true
											},
											"repeat": {
												"insertedAsDefault": true
											}
										}
									}
								},
								"lat": {
									"name": "lat",
									"displayName": "",
									"type": "number",
									"required": false,
									"repeat": false,
									"description": "Geography area's center latitude. Used for geography subscription only. Required.",
									"__METADATA__": {
										"primitiveValuesMeta": {
											"required": {
												"insertedAsDefault": true
											},
											"repeat": {
												"insertedAsDefault": true
											}
										}
									}
								},
								"lng": {
									"name": "lng",
									"displayName": "lng",
									"type": "number",
									"required": false,
									"repeat": false,
									"description": "Geography area's center longitude. Used for geography subscription only. Required.",
									"__METADATA__": {
										"primitiveValuesMeta": {
											"displayName": {
												"calculated": true
											},
											"required": {
												"insertedAsDefault": true
											},
											"repeat": {
												"insertedAsDefault": true
											}
										}
									}
								},
								"radius": {
									"name": "radius",
									"displayName": "radius",
									"type": "number",
									"required": false,
									"repeat": false,
									"description": "Geography area's radius.Used for geography subscription only. Required.",
									"__METADATA__": {
										"primitiveValuesMeta": {
											"displayName": {
												"calculated": true
											},
											"required": {
												"insertedAsDefault": true
											},
											"repeat": {
												"insertedAsDefault": true
											}
										}
									}
								}
							}
						}
					},
					"protocols": [
						"HTTPS"
					],
					"securedBy": [
						"oauth_2_0",
						"clientId"
					],
					"description": "Create a subscription",
					"method": "post",
					"__METADATA__": {
						"primitiveValuesMeta": {
							"protocols": {
								"calculated": true
							},
							"securedBy": {
								"calculated": true
							}
						}
					}
				},
				"delete": {
					"responses": {
						"200": {
							"code": "200",
							"body": {
								"application/json": {
									"name": "application/json",
									"schema": "subscriptionsDelete",
									"example": "{\n  \"meta\" : {\n    \"code\" : 200\n  } ,\n  \"data\" : null\n}",
									"schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"meta\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"code\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"data\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false\n    }\n  }\n}"
								}
							}
						}
					},
					"protocols": [
						"HTTPS"
					],
					"securedBy": [
						"oauth_2_0"
					],
					"queryParameters": {
						"client_id": {
							"name": "client_id",
							"displayName": "client_id",
							"type": "string",
							"required": true,
							"repeat": false,
							"description": "Application's client id",
							"__METADATA__": {
								"primitiveValuesMeta": {
									"displayName": {
										"calculated": true
									},
									"type": {
										"insertedAsDefault": true
									},
									"repeat": {
										"insertedAsDefault": true
									}
								}
							}
						},
						"client_secret": {
							"name": "client_secret",
							"displayName": "client_secret",
							"type": "string",
							"required": true,
							"repeat": false,
							"description": "Application's client secret",
							"__METADATA__": {
								"primitiveValuesMeta": {
									"displayName": {
										"calculated": true
									},
									"type": {
										"insertedAsDefault": true
									},
									"repeat": {
										"insertedAsDefault": true
									}
								}
							}
						},
						"id": {
							"name": "id",
							"displayName": "id",
							"type": "string",
							"required": false,
							"repeat": false,
							"description": "Id of subscription to be removed.",
							"__METADATA__": {
								"primitiveValuesMeta": {
									"displayName": {
										"calculated": true
									},
									"type": {
										"insertedAsDefault": true
									},
									"required": {
										"insertedAsDefault": true
									},
									"repeat": {
										"insertedAsDefault": true
									}
								}
							}
						},
						"object": {
							"name": "object",
							"displayName": "object",
							"type": "string",
							"required": false,
							"repeat": false,
							"description": "If you'd like to remove all subscriptions of a certain object type, you may include the object type. Also you can clear all your current subscriptions by setting 'object' to 'all'.",
							"enum": [
								"geography",
								"location",
								"tag",
								"user",
								"all"
							],
							"__METADATA__": {
								"primitiveValuesMeta": {
									"displayName": {
										"calculated": true
									},
									"type": {
										"insertedAsDefault": true
									},
									"required": {
										"insertedAsDefault": true
									},
									"repeat": {
										"insertedAsDefault": true
									}
								}
							}
						}
					},
					"description": "Delete a subscriptionsss",
					"method": "delete",
					"__METADATA__": {
						"primitiveValuesMeta": {
							"protocols": {
								"calculated": true
							}
						}
					}
				}
			},
			"displayName": "/subscriptions",
			"__METADATA__": {
				"primitiveValuesMeta": {
					"securedBy": {
						"calculated": true
					},
					"displayName": {
						"calculated": true
					}
				}
			},
			"relativeUriPathSegments": [
				"subscriptions"
			],
			"absoluteUri": "https://api.instagram.com/{version}/subscriptions",
			"completeRelativeUri": "/subscriptions",
			"parentUri": ""
		}
	],
	"documentation": [
		{
			"title": "Authentication",
			"content": "Instagram’s API uses the [OAuth 2.0 protocol](http://tools.ietf.org/html/draft-ietf-oauth-v2-12) for simple, but effective authentication and authorization. OAuth 2.0 is much easier to use than previous schemes; developers can start using the Instagram API almost immediately. The one thing to keep in mind is that all requests to the API must be made over SSL (https:// not http://)\n\n## Do you need to authenticate?\n\nFor the most part, Instagram’s API only requires the use of a _client_id). A client_id simply associates your server, script, or program with a specific application. However, some requests require authentication - specifically requests made on behalf of a user. Authenticated requests require an _access_token_. These tokens are unique to a user and should be stored securely. Access tokens may expire at any time in the future.\n\nNote that in many situations, you may not need to authenticate users at all. For instance, you may request popular photos without authenticating (i.e. you do not need to provide an access_token; just use your client ID with your request). We only require authentication in cases where your application is making requests on behalf of a user (commenting, liking, browsing a user’s feed, etc.).\n\n## Receiving an access_token\n\nIn order to receive an access_token, you must do the following:\n\n- Direct the user to our authorization url.\n  * If the user is not logged in, they will be asked to log in.\n  * The user will be asked if they’d like to give your application access to his/her Instagram data.\n- The server will redirect the user in one of two ways that you choose:\n  * *Server-side* flow (reccommended):Redirect the user to a URI of your choice. Take the provided \n     code parameter and exchange it for an access_token by POSTing the code to our access_token url.\n  * *Implicit flow*: Instead of handling a code, we include the access_token as a fragment (#) in the URL.          This method allows applications without any server component to receive an access_token with ease.\n\n## Server-side (Explicit) Flow\n\nUsing the server-side flow is quite easy. Simply follow these steps:\n\n### Step One: Direct your user to our authorization URL\n\n```\nhttps://api.instagram.com/oauth/authorize/?client_id=CLIENT-ID&redirect_uri=REDIRECT-URI&response_type=code\n```\n\n*Note:* You may provide an optional *scope* parameter to request additional permissions outside of the “basic” permissions scope. [Learn more about scope](http://instagram.com/developer/authentication/#scope).\n\n*Note*: You may provide an optional *state* parameter to carry through any server-specific state you need to, for example, protect against CSRF issues.\n\nAt this point, we present the user with a login screen and then a confirmation screen where they approve your app’s access to his/her Instagram data.\n\n### Step Two: Receive the redirect from Instagram\n\nOnce a user successfully authenticates and authorizes your application, we will redirect the user to your redirect_uri with a code parameter that you’ll use in step three.\n\n```\nhttp://your-redirect-uri?code=CODE\n```\n\nNote that your redirect URI's host and path MUST match exactly (including trailing slashes) to your registered redirect_uri. You may also include additional query parameters in the supplied redirect_uri, if you need to vary your behavior dynamically. Examples:\n\n|REGISTERED REDIRECT URI           |REDIRECT URI SENT TO /AUTHORIZE                |VALID?|\n|----------------------------------|-----------------------------------------------|------|\n|http://yourcallback.com/          |http://yourcallback.com/                       |yes   |\n|http://yourcallback.com/          |http://yourcallback.com/?this=that             |yes   |\n|http://yourcallback.com/?this=that|http://yourcallback.com/                       |no    |\n|http://yourcallback.com/?this=that|http://yourcallback.com/?this=that&another=true|yes   |\n|http://yourcallback.com/?this=that|http://yourcallback.com/?another=true&this=that|no    |\n|http://yourcallback.com/callback  |http://yourcallback.com/                       |no    |\n|http://yourcallback.com/callback  |http://yourcallback.com/callback/?type=mobile  |yes   |\n\nIf your request for approval is denied by the user, then we will redirect the user to your *redirect_uri* with the following parameters:\n\n* *error*: access_denied\n\n* *error_reason*: user_denied\n\n* *error_description*: The user denied your request\n\n```\nhttp://your-redirect-uri?error=access_denied&error_reason=user_denied&error_description=The+user+denied+your+request\n```\n\nIt is your responsibility to fail gracefully in this situation and display a corresponding error message to your user.\n\n### Step Three: Request the access_token\n\nIn the previous step, you’ll have received a code which you’ll have to exchange in order to receive an access_token for the user. In order to make this exchange, you simply have to POST this code, along with some app identification parameters to our access_token endpoint. Here are the required parameters:\n\n* *client_id*: your client id\n* *client_secret*: your client secret\n* *grant_type*: authorization_code is currently the only supported value\nredirect_uri: the redirect_uri you used in the authorization request. Note: this has to be the same value as in the authorization request.\n* *code*: the exact code you received during the authorization step.\n\nFor example, you could request an access_token like so:\n\n```\ncurl \\-F 'client_id=CLIENT-ID' \\\n    -F 'client_secret=CLIENT-SECRET' \\\n    -F 'grant_type=authorization_code' \\\n    -F 'redirect_uri=YOUR-REDIRECT-URI' \\\n    -F 'code=CODE' \\https://api.instagram.com/oauth/access_token\n```\n\nIf successful, this call will return a neatly packaged OAuth Token that you can use to make authenticated calls to the API. We also include the user who just authenticated for your convenience:\n\n```json\n{\n    \"access_token\": \"fb2e77d.47a0479900504cb3ab4a1f626d174d2d\",\n    \"user\": {\n        \"id\": \"1574083\",\n        \"username\": \"snoopdogg\",\n        \"full_name\": \"Snoop Dogg\",\n        \"profile_picture\": \"http://distillery.s3.amazonaws.com/profiles/profile_1574083_75sq_1295469061.jpg\"\n    }\n}\n```\n\nNote that we do not include an expiry time. Our access_tokens have no explicit expiry, though your app should handle the case that either the user revokes access or we expire the token after some period of time. In this case, your response’s meta will contain an “error_type=OAuthAccessTokenError”. In other words: do do not assume your access_token is valid forever.\n\n##Client-Side (Implicit) Authentication\n\nIf you’re building an app that does not have a server component (a purely javascript app, for instance), you’ll notice that it’s impossible to complete step three above to receive your access_token without also having to ship your client secret. You should never ship your client secret onto devices you don’t control. Then how do you get an access_token? Well the smart folks in charge of the OAuth 2.0 spec anticipated this problem and created the Implicit Authentication Flow.\n\n### Step One: Direct your user to our authorization URL\n\n```\nhttps://instagram.com/oauth/authorize/?client_id=CLIENT-ID&redirect_uri=REDIRECT-URI&response_type=token\n```\n\nAt this point, we present the user with a login screen and then a confirmation screen where they approve your app’s access to their Instagram data. Note that unlike the explicit flow the response type here is “token”.\n\n### Step Two: Receive the access_token via the URL fragment\n\nOnce the user has authenticated and then authorized your application, we’ll redirect them to your redirect_uri with the access_token in the url fragment. It’ll look like so:\n\n```\nhttp://your-redirect-uri#access_token=ACCESS-TOKEN\n```\n\nSimply grab the access_token off the URL fragment and you’re good to go. If the user chooses not to authorize your application, you’ll receive the same error response as in the explicit flow\n\n## Scope (Permissions)\n\nThe OAuth 2.0 spec allows you to specify the scope of the access you’re requesting from the user. Currently, all apps have basic read access by default. If all you want to do is access data then you do not need to specify a scope (the “basic” scope will be granted automatically).\n\nHowever, if you plan on asking for extended access such as liking, commenting, or managing friendships, you’ll have to specify these scopes in your authorization request. Here are the scopes we currently support:\n\n* basic - to read any and all data related to a user (e.g. following/followed-by lists, photos, etc.) (granted by default)\n* comments - to create or delete comments on a user’s behalf\n* relationships - to follow and unfollow users on a user’s behalf\n* likes - to like and unlike items on a user’s behalf\n\nYou should only request the scope you need at the time of authorization. If in the future you require additional scope, you may forward the user to the authorization URL with that additional scope to be granted. If you attempt to perform a request with an access token that isn’t authorized for that scope, you will receive an OAuthPermissionsException error return.\n\nIf you’d like to request multiple scopes at once, simply separate the scopes by a space. In the url, this equates to an escaped space (“+”). So if you’re requesting the likes and comments permission, the parameter will look like this:\n\n```\nscope=likes+comments\n```\n\nNote that an empty scope parameter (scope=) is invalid; you must either omit the scope, or specify a non-empty scope list."
		},
		{
			"title": "Headline",
			"content": "Instagram is a popular image sharing mobile service. The first version of the Instagram API is an exciting step forward towards making it easier for users to have open access to their Instagram data."
		}
	],
	"__METADATA__": {
		"primitiveValuesMeta": {
			"protocols": {
				"calculated": true
			}
		}
	}
}